{"id": "days/Day001.md::0::f35b2f53228d7947", "text": "# Day [001] - ChatGPTによる作業日報テンプレート生成と自己記録支援", "metadata": {"path": "days/Day001.md", "file": "Day001.md", "stem": "Day001"}}
{"id": "days/Day001.md::1::85067c84824c5d9a", "text": "## 🎯 本日のテーマ\n\nChatGPTに自動で作業日記を書かせるプロンプトを構築した。  \n「プログラミングに関する経験やノウハウとともに作業の結果を記録する、日記のようなものを実績として残したい」と考えたから。  \n脳の血流の障害で、思考能力が徐々に失われ、おそらく3年もすればまともな文書が書けないほどに無能になるのではないかと思う。  \nいまはLLMの補助で文書が書けている。今のうちに思想やこれまで培ってきた知識や経験を記録に残しつつ、必要なプログラミングスキルを鍛えたい。", "metadata": {"path": "days/Day001.md", "file": "Day001.md", "stem": "Day001"}}
{"id": "days/Day001.md::2::3e11339f4f36eec9", "text": "## 🧠 背景・思想\n\nサイバーとは、もともとウィーナーが提唱したサイバネティクス（cybernetics）という概念に由来し、舵を操るという意味のギリシャ語に基づいている。  \nこれは通信やフィードバックを駆使してモノを望む状態に動かす行為であり、日本語でいう「操る」という言葉が最もしっくりくる。英語にはそれに相当する言葉はない。\n\nデジタルとは、陰0と陽1の二択の組み合わせで世界を記述し、把握しやすく、伝えやすく、操りやすくするための技術。\n\n私は学生時代から、自身の脳や体が壊れていくことを感じており、それを補うためのシステムとしてサイバー技術やコンピューターに可能性を見出した。  \nコンピューターに自分の思想を入力し、壊れた脳の代わりに自分の魂を継続させたい。  \nそれは、cyber + organ、すなわち cyborg（サイボーグ）の基礎的な構築行為である。", "metadata": {"path": "days/Day001.md", "file": "Day001.md", "stem": "Day001"}}
{"id": "days/Day001.md::3::b187eb7c4474fc07", "text": "## ⚙️ 実装と試行\n\nChatGPTを活用し、1000日レポート用のテンプレートと、問いかけ方式による対話型記録システムを構築した。  \nプロンプト設計を行い、テンプレートの出力、対話の開始、Markdownへの整形までの流れを確立。  \n思考が不安定な中でも、ChatGPTが補助的に問いかけることで、安定して書けるよう工夫した。  \nChatGPTが私の思考の整理を手伝ってくれる点は非常に興味深い。", "metadata": {"path": "days/Day001.md", "file": "Day001.md", "stem": "Day001"}}
{"id": "days/Day001.md::4::12edd5b6d6a394a5", "text": "## 📊 操作フェーズチェック\n\n- 該当した番号：①⑦⑪\n- コメント：\n  - ①：WebAPI、テンプレート、プロンプト設計による入力設計\n  - ⑦：プロンプトによる情報の構造化と流れの制御\n  - ⑪：一問一答式の反復による処理設計", "metadata": {"path": "days/Day001.md", "file": "Day001.md", "stem": "Day001"}}
{"id": "days/Day001.md::5::0b66edd88e5e295e", "text": "## 🔁 洞察と考察\n\nChatGPTを駆使すれば、今の私の壊れた頭でも読める文書が書けそうだという確信が持てた。  \nこれは「自分の外側にある脳」としてのLLMを使っているような体験である。  \n記録を残すことが、自分の延命装置のように感じられる。", "metadata": {"path": "days/Day001.md", "file": "Day001.md", "stem": "Day001"}}
{"id": "days/Day001.md::6::cb258796f41c5606", "text": "## 🪶 雑記・気づき\n\ntemplateの語源が“temple（寺院）”の設計図だったという説に触れた。  \n「正しく構築された形式が“聖性”を生む」という思想は、プログラミングやレポート構造にも通じる。  \n私は、日記を“寺院の礎石”として立てているのかもしれない。", "metadata": {"path": "days/Day001.md", "file": "Day001.md", "stem": "Day001"}}
{"id": "days/Day001.md::7::b7283e95c36301ad", "text": "## 🙏 感謝・引用\n\nChatGPTやLLMに関わったすべての研究者たちに感謝したい。  \nこのツールのおかげで、私はまだ思考ができている。  \nまた、Webツールの開発者、PCのハードウェアや通信基盤を支えてくれたすべての人たち。  \nライセンスや生活を支えてくれた職場、給料を得る仕事ができるよう支えてくれた両親、学び舎、同僚たちに深く感謝。", "metadata": {"path": "days/Day001.md", "file": "Day001.md", "stem": "Day001"}}
{"id": "days/Day001.md::8::0dffed96f755a6e4", "text": "## 🛠 次の挑戦メモ\n\nこのテンプレートで毎日書くのは少し大変かもしれない。  \nもっと楽に続けられるよう、テンプレートや記入補助スクリプトの改善をしたい。  \nまた、日替わりの問いかけバリエーションも欲しい。", "metadata": {"path": "days/Day001.md", "file": "Day001.md", "stem": "Day001"}}
{"id": "days/Day002.md::0::22be8133b42dac30", "text": "# Day [002] - 2025年参議院選挙ポスター設置場所の点群CGの作成", "metadata": {"path": "days/Day002.md", "file": "Day002.md", "stem": "Day002"}}
{"id": "days/Day002.md::1::b051391f15e02761", "text": "## 🎯 本日のテーマ\n\n2025年参議院選挙ポスター設置場所の点群データをもとに、設置数の分布を視覚化するCGを作成。関係者に対して、視覚表現の効果と実装技術の有用性を示すことを目的とした。", "metadata": {"path": "days/Day002.md", "file": "Day002.md", "stem": "Day002"}}
{"id": "days/Day002.md::2::7233a15be2fc4d90", "text": "## 🧠 背景・思想\n\n「サイバー」は、対象を外部から制御・操作可能な状態を意味する。「可視化」は、対象に対して何らかの操作を加える前段階として、視認可能な状態へ変換する工程とする。\n\n今回の作業では、CSVから取得したポスター設置情報に対し、スクレイピングで緯度経度を付与し、TouchDesigner上でTOP画像に変換。点群としてインスタンシング表示を行い、緯度経度に対応した配置を行った。点群はその後、変形処理・移動操作など、動的操作の対象となることを想定して構成した。", "metadata": {"path": "days/Day002.md", "file": "Day002.md", "stem": "Day002"}}
{"id": "days/Day002.md::3::4b3207752d9c36c9", "text": "## ⚙️ 実装と試行\n\n使用ツールはTouchDesigner。Web表示とプロジェクションマッピングの両方に対応可能であり、視覚的要素をリアルタイムに調整できる利点があるため選定した。\n\n当初はJSON形式での処理を試みたが、TouchDesignerにおけるJSON処理が限定的であり、代替手段としてCSV形式に切り替えた。全国データを一括で扱うと不安定になるため、都道府県単位にデータを分割し、処理後に統合する構成を採用した。", "metadata": {"path": "days/Day002.md", "file": "Day002.md", "stem": "Day002"}}
{"id": "days/Day002.md::4::a983c5154e2a2f2d", "text": "## 📊 操作フェーズチェック\n\n- 該当番号：① 入力の捉え方、⑦ フローとベクトル、⑨ 並列性の統合\n- 補足：\n  - 入力データとしてCSVを用い、緯度経度を別途補完\n  - 緯度経度に対応した点群をベクトルで配置\n  - 都道府県ごとに処理を分割し、後段で統合", "metadata": {"path": "days/Day002.md", "file": "Day002.md", "stem": "Day002"}}
{"id": "days/Day002.md::5::9d03ce25d658017b", "text": "## 🔁 洞察と考察\n\nTouchDesignerにおける大規模データ処理には制限があるため、事前にデータを分割・整形してから投入することが安定運用の条件となる。また、今後のためにJSONおよびRDBの処理スキルを習得する必要性を感じた。\n\nグラフィックの見た目に関して、現在の自分には調整力・デザイン判断力が不足しており、プロジェクション環境に応じた調整インターフェイスの開発が求められる。床の凹凸や照明環境との整合性を含めた、現場調整可能な構成が必要である。現段階では、ポスターデータをどのように社会的に意味付けるかについて明確な方向性は得られていない。", "metadata": {"path": "days/Day002.md", "file": "Day002.md", "stem": "Day002"}}
{"id": "days/Day002.md::6::9ba497d56c73fccd", "text": "## 🪶 雑記・気づき\n\n長期にわたってCGと映像機器の実装に関わってきた。グラフィックは、その場の環境や文脈に応じてリアルタイムに調整可能でなければ、運用に支障をきたす。\n\n現時点では、スマートフォンによる小型表示以外に、現場に適応可能な情報提示手段は一般化していない。プロジェクションを活用した視覚表現は、技術的には有効だが、実装には高い調整能力と設営ノウハウが必要となる。\n\n記録を継続する目的は、評価を受けることよりも、参照可能なアウトプットを残すことにある。", "metadata": {"path": "days/Day002.md", "file": "Day002.md", "stem": "Day002"}}
{"id": "days/Day002.md::7::716920733d7990bf", "text": "## 🙏 感謝・引用\n\n- ポスター設置情報の提供元に感謝する。\n- TouchDesigner開発者と、チュートリアルの制作者に感謝する。\n- 参考にした記事：[note: 選挙ポスター設置場所をMapLibreGLで可視化してみた](https://note.com/annotakahiro24/n/nc722ec8fcf5f?sub_rt=share_b)", "metadata": {"path": "days/Day002.md", "file": "Day002.md", "stem": "Day002"}}
{"id": "days/Day002.md::8::0db40f5a7d64786f", "text": "## 🛠 次の挑戦メモ\n\n- 点群の動的制御（フィードバック処理、流体的挙動の実装）\n- プロジェクションマッピング環境におけるリアルタイム調整インターフェイスの開発\n- 映像操作用インターフェイス（ジェスチャーや他センサとの連携）の検討\n- 表示内容のデザイン調整と、即時提示できる環境構築\n- 表現事例として、プロジェクションを用いた映像提示を行う場の確保", "metadata": {"path": "days/Day002.md", "file": "Day002.md", "stem": "Day002"}}
{"id": "days/Day003.md::0::cc463cb307eb3e9b", "text": "# Day [003] - 点群マップのプロジェクション試行", "metadata": {"path": "days/Day003.md", "file": "Day003.md", "stem": "Day003"}}
{"id": "days/Day003.md::1::425f2a24c8a01fbb", "text": "## 🎯 本日のテーマ\n\nプロジェクターでポスター掲示場所マップの点群データを地図の形に投影。", "metadata": {"path": "days/Day003.md", "file": "Day003.md", "stem": "Day003"}}
{"id": "days/Day003.md::2::75f82922824f23c9", "text": "## ⚙️ 実装と試行\n\nTouchDesignerとGitを使用。  \nGitでの共有が少しずつ分かってきた。デバイス間でデータをやりとりし、それぞれの表示環境にあわせて調整できるのが便利。  \n点群を自在に操るには、細かいところで引っかかることが多く、まだ誰もやってないやり方だと情報も見つからない。", "metadata": {"path": "days/Day003.md", "file": "Day003.md", "stem": "Day003"}}
{"id": "days/Day003.md::3::1173c39a39fca649", "text": "## 🔁 洞察と考察\n\n出力のマッピング（②）、見られ方を操るマテリアル調整（④）、点群の並列操作で文字を形作る（⑨）、動きの勢いを調整する（⑩）といった術を駆使。  \n「人に分かりやすくアウトプットすること」の重要性を感じた。なぜそう感じるのか、自分でもまだ不思議。", "metadata": {"path": "days/Day003.md", "file": "Day003.md", "stem": "Day003"}}
{"id": "days/Day004.md::0::118bbe1f5669abda", "text": "# Day [004] - 点群にノイズを与える：見せ方の調律と敬意の伝達", "metadata": {"path": "days/Day004.md", "file": "Day004.md", "stem": "Day004"}}
{"id": "days/Day004.md::1::b207c8254af718cf", "text": "## 🎯 本日のテーマ\n\n\nポスターマップの点群がいかに多かったかを見せたいと考えた。  \n点群の密集度合いや、一瞬ばらける動きを修正した。  \n11万か所のポスター設置のうち85%もの掲示をサポーター団体が終えた。  \nその苦労と成果を実感いただきたい。", "metadata": {"path": "days/Day004.md", "file": "Day004.md", "stem": "Day004"}}
{"id": "days/Day004.md::2::a0515e91af24d2ea", "text": "## 🧠 背景・思想\n\n\n自在に点群データを操り、その見せ方を操る。  \nデータの見せ方がうまいかは、コミュニケーションをとり、オブジェクトを動かす際に重要だ。  \nサイバーは「操る」ことであり、可視化は「それがいかに有用かを示すこと」。  \nデータを操れることは、体が動かないときに、他のものを動かせるという可能性でもある。", "metadata": {"path": "days/Day004.md", "file": "Day004.md", "stem": "Day004"}}
{"id": "days/Day004.md::3::d84973a4e2c593f5", "text": "## ⚙️ 実装と試行\n\n\nTouchDesignerを継続使用。  \n点群の座標に部分的にノイズをかけて動かす。ノイズをかける部分はX座標に沿ってスイープ。  \nノイズの形状・分布の設計次第で動き方が変わる。  \n近くの点群が別方向に動くほうがばらけて見え、数が多く見えやすい。  \nしかし動きがバラバラすぎると「制御されていない」印象になるため、上下のみの動きに限定し、ばね振動のように増加・減衰させる制御を追加。  \nそれをスイープすることで、見やすい動きにできた。", "metadata": {"path": "days/Day004.md", "file": "Day004.md", "stem": "Day004"}}
{"id": "days/Day004.md::4::32523decdc479de3", "text": "## 📊 操作フェーズチェック\n\n\n該当番号：④⑤⑦⑨⑩⑫\n\nコメント：\n\n- ④：見られ方の制御。ノイズはマテリアル的な役割  \n- ⑤：動き出すトリガー制御  \n- ⑦：ベクトル方向の調整  \n- ⑨：特定範囲の点群を並列操作  \n- ⑩：ばね的な動きの制御（増加→減衰）  \n- ⑫：ノイズと周囲形状の調和", "metadata": {"path": "days/Day004.md", "file": "Day004.md", "stem": "Day004"}}
{"id": "days/Day004.md::5::fb0ecdc033be864e", "text": "## 🔁 洞察と考察\n\n\nノイズは悪いものに見られがちだが、制御して使いこなせば非常に重要な表現要素となる。  \nいかに“乱れ”を“意味のある振る舞い”に転換するかが、操る技術そのものである。", "metadata": {"path": "days/Day004.md", "file": "Day004.md", "stem": "Day004"}}
{"id": "days/Day004.md::6::a2ee93d013902eb9", "text": "## 🪶 雑記・気づき\n\n\n自分が誰なのかわからなくなってきている気がする。  \nなぜこの記録をしているのか、自分でもわからなくなりそうだ。  \nだが、そのうちに「外部に記録されたデータ」から「自分が何をすべきか」を支持するような仕組みが必要になるだろう。  \n目の前の色が消え、灰色になっていく。  \n肉体は壊れて当然だ。重要なのは、魂を別のシステムに引き継ぎ、継続することだ。", "metadata": {"path": "days/Day004.md", "file": "Day004.md", "stem": "Day004"}}
{"id": "days/Day004.md::7::39e6c995b491c9a4", "text": "## 🙏 感謝・引用\n\n\nポスター掲示活動、政党活動を通じて世の中をよくしようという人々の熱量に感謝。  \nまた、データを扱うテクノロジーの意義を共有できる仲間たちにも感謝。  \nそれがどれほど素晴らしいかを、可視化によって伝えたい。  \nそれが、彼らの熱量と貢献に対する自分なりの「ありがとう」になると信じている。", "metadata": {"path": "days/Day004.md", "file": "Day004.md", "stem": "Day004"}}
{"id": "days/Day004.md::8::9fe1b8b4cffd01d5", "text": "## 🛠 次の挑戦メモ\n\n\n（未記入）", "metadata": {"path": "days/Day004.md", "file": "Day004.md", "stem": "Day004"}}
{"id": "days/Day005.md::0::ed292b0776a1644e", "text": "# Day005 - 製品デモを支える「願い＋表示」の設計思想\n\n\n技術営業向けに製品デモ用プログラムを、Ubuntu環境でデスクトップからダブルクリック一発で起動できるように整備した。  \n現場で営業の方がストレスなく、迷わず動作確認・デモ説明ができるようにするのが目的。  \n「これを表示したい」と思ったとき、**「これを選ぶ」＋「表示する」**の2操作で完結する構成を目指した。  \n願いを叶えるための手順は、可能な限りシンプルで直感的であることが理想である。\n\n---", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::1::4a40a19c2d2da1f3", "text": "## 🧠 背景・思想\n\n\nサイバーとは、意のままに動かせること。  \n願いを選択する以外のすべての工程は、可能な限り削ぎ落とし、遅延も誤差もなく伝わるのが望ましい。  \nそうした設計によって、人の“意志”が機械に伝わり、あたかも自分の体を動かすように操作できる状態が生まれる。  \nそれはやがて、そのシステムが自分の“身体の拡張”として機能する状態＝サイボーグ的な統合へとつながる。  \nそして、気の流れ＝意図の流れが自然に可視化されているかどうかが、継続的な運用を支えるカギになる。\n\n---", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::2::9c71d8295d1b2d16", "text": "## ⚙️ 実装と試行\n\n\n使用環境はUbuntu。  \n.desktopファイルと.shスクリプトを用いて、GUI操作からCLIベースの処理を抽象化・起動可能にした。  \nZadar社のレーダーユニットがROS通信で出力する位置・速度情報をrVizで表示。  \n加えて、同ユニットがWebサーバーを立ち上げて提供するWebAPIインターフェースによるブラウザ表示もcURL経由で自動起動できるように統合した。  \n毎回読み込む.shファイルはデフォルトで有効化し、ユーザーが意識せずとも前提環境が整うように工夫した。  \n結果、営業担当者が「デスクトップから一発起動」で全機能が動く仕組みが完成した。\n\n---", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::3::5f3e9ac8ec718418", "text": "## 📊 操作フェーズチェック\n\n\n該当番号：① 入力の捉え方、② 出力の形、⑪ 効率的な反復演算  \n\nコメント：  \n①②：インターフェイスを極限まで簡略化し、出力までの流れを直感的に整備  \n⑪：バッチ処理により、一つのトリガーから複数の処理が連鎖的に展開される構成を実現\n\n---", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::4::1986bdb47fba34d5", "text": "## 🔁 洞察と考察\n\n\n「これを表示したい」→「これ＋表示」で完結する操作性は、ユーザーにとっても設計者にとっても明快で理想的な状態。  \n手を入れて設計すれば、複雑そうな仕組みでも驚くほど便利でわかりやすくなることをあらためて実感した。  \nZadarのROSノード起動とrViz表示、WebAPIのブラウザ表示という複数システムが一連の流れで連携動作する設計は、「願いから即動作」という理想の操作感覚に近づいている。  \n\nこのような「願い→即動作」の構成は、アラン・ケイが提唱した「思考を支える道具」としてのコンピュータ像に近いと感じた。  \n操作が直感的で、意図が中断されないインターフェイスは、まさに“ダイナブック的発想”の実装ともいえる。\n\n---", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::5::db1191f32c6306c6", "text": "## 🔍 アラン・ケイとの関連性", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::6::a1d70e65f8ff093f", "text": "### ✅ 1.「ユーザーの願いに応じて動くシステム」＝ ダイナブック構想の実装\n\nアラン・ケイが目指したのは、「子どもでも直感的に操れる、自分の思考を支える道具（＝ダイナブック）」。\n今回の「願い＋表示」で動く設計は、まさにこの**\"思考の延長線上で動くコンピューティング\"**という理想の体現である。", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::7::16257b70dd4221d0", "text": "### ✅ 2.「シンプルなインターフェイス」＝ OOPの原点\n\nアラン・ケイのオブジェクト指向の原点は、「メッセージのやりとりで振る舞いを制御する小さな生き物」。  \n.desktop や .sh で「表示しろ」と命令し、裏でROSやrViz、WebAPIが起動する構成は、“ユーザーから見たオブジェクト”の姿そのもの。", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::8::6994a4ac2f1f312e", "text": "### ✅ 3.「身体性の拡張としての道具」＝ 教育的アーキテクチャ\n\nケイは「教育とは未来の自分をプログラムする行為」と語った。  \n「未来の自分や他人が迷わず扱えるように整備する作業」は、教育的アーキテクチャの設計そのものに近い。\n\n---", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::9::5c9ce926e1d3e7c7", "text": "## 🪶 雑記・気づき\n\n\nプログラムやサイバー技術は、法則で縛れるような単純な世界ではない。  \nそれは武道のように、人それぞれのやり方があり、無数の流派が生まれる自由な世界だ。  \nだが、そこに“型”を整えていくことができれば、多くの人が習熟しやすくなる。  \n私は今、その“型”を言語化・構造化しようとしている。  \nたとえ誰かに追い越されても、思考能力が衰えていっても、自分にもまだ操れる世界があると信じたい。  \nだからこそ、誰もが“操ること”を当たり前にできる世の中を作りたいと願っている。\n\nアラン・ケイが語った「オブジェクトとはメッセージを受け取って反応するもの」という考え方を、.desktopや.sh、ROS2、WebAPIを連動させることで再体験している気がした。  \n複雑さを隠し、意図に応じて動く仕組み。それが“誰にとっても使える身体の一部”になっていく感覚に近づいている。\n\n---", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::10::61745ad02bef5af1", "text": "## 🙏 感謝・引用\n\n\n仕事を、どんなに無意味に見えても継続してくれる仲間に感謝を。  \n不利で不評でも、希望を捨てず努力する営業の姿に敬意を。  \nその苦労を伝える手段として、ソフトが正しく動き、正しく伝わるように設計することが、自分なりの貢献だと思っている。  \nまた、Zadar社の優れたソフトウェア開発にも深く感謝したい。  \nそれがなければ、ここまでの“伝える工夫”も生まれなかっただろう。\n\n---", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day005.md::11::e35887d16142e237", "text": "## 🛠 次の挑戦メモ\n\n\n- .desktopランチャーとWeb起動系のさらなる共通化  \n- ユーザー環境によって異なる依存パスの吸収設計  \n- 展示・営業現場でのトラブルシューティングマニュアル作成", "metadata": {"path": "days/Day005.md", "file": "Day005.md", "stem": "Day005"}}
{"id": "days/Day006.md::0::a174fe10106be3b2", "text": "# Day [006] - 営業用GUIの作成とデバッグ：可視化による問題抽出\n\n\n🎯 本日のテーマ\n\nデモ用の営業プログラムを操作するための、ボタンの並んだGUIをPythonコードで作成。  \nChatGPTにコード生成を手伝ってもらい、Ubuntu上で.desktopから起動できるように整備。\n\n⚙️ 実装と試行\n\n**使用ツール**：Python（GUI）、.desktop起動構成\n\n**試行内容**：\n\n- GUIの構築とボタントリガーでの起動設計  \n- ディレクトリ作成時のエラー（「すでにあります」）の原因追跡  \n- 実行ファイル参照パスがデスクトップ起動時に狂う問題のデバッグ  \n- printによる可視化的なあぶり出し手法で、問題点を特定・修正  \n\n**結果**：GUIのシンプルな操作系なら、想像以上に速く望み通りの形にできると実感\n\n🔁 洞察と考察\n\n- シンプルなGUIなら、思ったより短時間で希望通りに組み上がる\n- デバッグ時には、処理の各ポイントに「〜完了」といったログ出力（print）を入れておくことで、  \n  「エラーがどこの処理の間で起きたか」を把握することができた。  \n  この手法は、トレースログ的に処理の流れを可視化するうえで有効だった（③ 内部状態の可視化）。\n- .desktop起動のディレクトリ依存など、GUI化とシステム統合の際に特有の注意点があると気づいた\n\n**操作フェーズチェック**：\n\n- ① 入力設計（GUIのボタンクリックによるトリガー）  \n- ③ 内部状態の可視化（printログ、エラーメッセージ）  \n- ⑥ 選択と接続（参照すべきアドレスを選び、今いるディレクトリ or ルートから接続）  \n- ⑪ トリガーをきっかけにしたプログラムの展開（ボタン1つで複数処理が動く仕組み）  \n\n🙏 感謝・引用\n\nGUIという概念を発明・整備してくれた先人たちに感謝", "metadata": {"path": "days/Day006.md", "file": "Day006.md", "stem": "Day006"}}
{"id": "days/Day007.md::0::2624d9847985bb79", "text": "# Day7 - 映像伝送は夢を渡すこと", "metadata": {"path": "days/Day007.md", "file": "Day007.md", "stem": "Day007"}}
{"id": "days/Day007.md::1::fe0d047cf5827695", "text": "## 🎯 願い・目的\n\n商談のとき、Web会議PCへデモ用PCの映像をNDIでLAN伝送したい。  \nNDIは高帯域を使うため、Web会議とは別のローカルLANで軽く伝え、ソフト本体は高性能に動作させたいという願い。", "metadata": {"path": "days/Day007.md", "file": "Day007.md", "stem": "Day007"}}
{"id": "days/Day007.md::2::d13f627692d33db8", "text": "## 🧠 背景・思想\n\nNDIでの映像伝送は、あたかも「見ている夢を、他の身体に転送する」ような感覚。  \nサイバーとは、システムの意識を操ること。映像とは、身体の思いを可視化し他者に伝える手段。  \n私の身体が滅びても、映像を通じて人々の夢に生き続けたい。", "metadata": {"path": "days/Day007.md", "file": "Day007.md", "stem": "Day007"}}
{"id": "days/Day007.md::3::ed3de813e6497fac", "text": "## ⚙️ 実装と試行\n\n- NDI用にLANケーブルでPCを直結。  \n- 2台のPCでIPアドレスを手動設定：`172.168.0.10` / `172.168.0.20`  \n- だが `ping` が通らず、NDI伝送も失敗  \n- ファイアウォールの設定を見直していなかった可能性がある", "metadata": {"path": "days/Day007.md", "file": "Day007.md", "stem": "Day007"}}
{"id": "days/Day007.md::4::830ca1007e0f02e7", "text": "## 🪛 使用した技術・術\n\n- `① 入力`：操作はケーブル接続・設定変更というインターフェイス入力  \n- `② 出力`：映像が出るべきなのに出なかった  \n- `⑥ 接続`：点と点を繋ぐ術、IPアドレスの割当てとネットワーク的な位置関係の把握がカギ", "metadata": {"path": "days/Day007.md", "file": "Day007.md", "stem": "Day007"}}
{"id": "days/Day007.md::5::1faff5aef42937ef", "text": "## 📘 学びと反省\n\n- 30分という短い商談準備時間では、通信設定を詰めきれなかった  \n- 有用な技術とは、**短時間で必要な要件を満たせるもの**  \n- 通信構成全体をイメージできていれば、ファイアウォール設定にも気づけたはず  \n- 「接続の成功」は偶然ではなく、意識された構成と可視化が必要", "metadata": {"path": "days/Day007.md", "file": "Day007.md", "stem": "Day007"}}
{"id": "days/Day007.md::6::191ce00e2c7dd335", "text": "## ❤️ 感謝\n\n誰かがつくったNDIという夢を運ぶ技術に。  \nその可能性を信じ、実験させてくれた環境に感謝。", "metadata": {"path": "days/Day007.md", "file": "Day007.md", "stem": "Day007"}}
{"id": "days/Day008.md::0::55366ec1c98382cb", "text": "# Day8（祈りと繋がり、方向性）\n\n\n今日は手が動かせそうにない。でも考えることはできる。  \nそれは「祈り」とも言える。願い、今後の方針、自分が何をすべきかを整理した。\n\n---", "metadata": {"path": "days/Day008.md", "file": "Day008.md", "stem": "Day008"}}
{"id": "days/Day008.md::1::00f8233a9f64a353", "text": "## 1. 今後の思考の手順（祈りの構造）\n\n\n**「どうしたいか」＝祈り**  \n\n難しい言葉はいらない。願いこそが思考の原点。\n\nこの願いをもとに、次の3つの手順で思考を組み立てていく：\n\n| 項目 | 内容 |\n|------|------|\n| 思考の順序 | 祈りに従って、何をどうすればよいか意味で並び替える |\n| 接続の順序 | 願いがより叶いやすくなるような繋ぎ方を選ぶ |\n| 判断基準 | 自身の願望（BIDモデルのD）<br>自身の気持ち（I）<br>他人の気持ち（I）に従う |\n\n※補足：  \n他人の願望（D）は直接は分からない  \n→ その人のアウトプットされたものから気持ち（I）を読み取ることで推測する。  \n\n他人と繋がれていることに感謝を。まだ誰かが周囲にいてくれている。\n\n---", "metadata": {"path": "days/Day008.md", "file": "Day008.md", "stem": "Day008"}}
{"id": "days/Day008.md::2::10f881933daf646b", "text": "## 2. 社会との関係：歯車としての自分\n\n\n> 我々は社会という大きな機械の歯車であり、  \nときには**奴隷（slave）**とさえ言える存在である。\n\nでも、それにネガティブな意味はない。  \n\n歯車は回された分だけ、他の歯車を回す責任がある。  \n\n今まで受け取ってきた支えや技術に、報いるだけのアウトプットを出す必要がある。  \n\nだから、役に立ちたい、動いてほしい、貢献したいという願いが生まれる。\n\n---", "metadata": {"path": "days/Day008.md", "file": "Day008.md", "stem": "Day008"}}
{"id": "days/Day008.md::3::341fd0c8f178f89d", "text": "## 3. 自分にできること\n\n\n- **「ここに書かれたこと」**を通じて考えを残す  \n- 可視化すること：人の夢や祈りを見えるようにする  \n- 思想の言語化と実装を残す：  \n  - 「物をサイバーとして操るとはどういうことか」  \n  - 「どう考えるべきなのか」  \n  - 「何を重要視すべきなのか」  \n\nできれば、東洋思想や日本文化と融合させた、魔法や陰陽術のような思想体系としてまとめたい。\n\n---", "metadata": {"path": "days/Day008.md", "file": "Day008.md", "stem": "Day008"}}
{"id": "days/Day008.md::4::1347e4ebe3459670", "text": "## 4. 陰陽術とサイバー思想\n\n\n> これまでの陰陽術のダメだったところは、  \n祈ってもそれがすぐ叶わなかったことにある。\n\nその願いが叶わないことを、難解な言葉で誤魔化し、意味のあるものに変えようとした。  \nそのせいで、思想が歪んだ。  \n\n願いを叶える力のないまま、それをあるかのように見せる欺瞞。  \n無理やり理屈をつけることで、詐欺師のような形になってしまった思想。\n\n---", "metadata": {"path": "days/Day008.md", "file": "Day008.md", "stem": "Day008"}}
{"id": "days/Day008.md::5::8a6e3da97cf1027b", "text": "## 5. サイバーがもたらす、新たな「祈りの叶え方」\n\n\nサイバーは違う。  \n\nGUIのボタンを押せば、即座に反応が返ってくる。  \nログが出る。LEDが光る。データが送られる。  \n\nつまり：  \n> 願い → 操作 → 結果  \nが誤差なく即時に叶う。\n\nこれが「サイバー陰陽術」の核心や。  \n\n- 操作というかたちに落とし込める願い  \n- それを叶える設計  \n- 意図した通りに動くプログラム  \n\nこの3つが揃えば、祈りは魔法ではなく技術になる。\n\n---", "metadata": {"path": "days/Day008.md", "file": "Day008.md", "stem": "Day008"}}
{"id": "days/Day008.md::6::3be60f155c26a320", "text": "## 6. まとめ\n\n\n> 願いは叶わなければならない。  \nそのために私は、願いを構造化し、即時に実行され、誰でも再現できる形に変えていく。  \n願いは、祈りではなく操作であり、実装であり、社会と繋がるインターフェースである。  \n\nそれを体現するための記録が、この日報であり、思想体系としての土台である。\n\n---", "metadata": {"path": "days/Day008.md", "file": "Day008.md", "stem": "Day008"}}
{"id": "days/Day009.md::0::87a738c13f79b9ac", "text": "# Day009 - 自動更新のトリガー設計と比較", "metadata": {"path": "days/Day009.md", "file": "Day009.md", "stem": "Day009"}}
{"id": "days/Day009.md::1::8bd6ea2d67cb2baa", "text": "## 🎯 本日のテーマ\n\nGitHub ActionsでREADMEを自動更新する仕組みを作ってみた。", "metadata": {"path": "days/Day009.md", "file": "Day009.md", "stem": "Day009"}}
{"id": "days/Day009.md::2::07756a0676bcf3de", "text": "## 🧠 背景・思想\n\n毎日手でリンクを追加するのは面倒。記録を続けるには、**書くことそのものより、書ける状態を自動で保つ**のが鍵やと思った。", "metadata": {"path": "days/Day009.md", "file": "Day009.md", "stem": "Day009"}}
{"id": "days/Day009.md::3::bc1f5e830f8659d4", "text": "## ⚙️ 実装と試行\n\n- `on: push` イベントで `.md` ファイルが追加されたときに `README.md` を更新\n- `scripts/update_readme.py` で `days/` フォルダ内の `DayNNN.md` をスキャンしてリンク生成\n- Actionsから直接Pushするために `GITHUB_TOKEN` を使う設定も学んだ", "metadata": {"path": "days/Day009.md", "file": "Day009.md", "stem": "Day009"}}
{"id": "days/Day009.md::4::89f1d21869475c33", "text": "## 📊 操作フェーズチェック\n\n- 該当した番号：④⑤\n- コメント：  \n  - ④ 可視化・可聴化：README に日ごとのリンクを明示的に並べる構造を設計\n  - ⑤ トリガー設計：pushイベントを契機に処理を走らせる設計（リアクティブ）", "metadata": {"path": "days/Day009.md", "file": "Day009.md", "stem": "Day009"}}
{"id": "days/Day009.md::5::da648d75260e3f91", "text": "### 🔁 補足：⑤のトリガー設計とは？\n\n「イベントが起きたらコードを実行する」方式で、反対は**巡回処理（ポーリング）**。  \n前者はリアクティブ、後者はプロアクティブという分類もできる。", "metadata": {"path": "days/Day009.md", "file": "Day009.md", "stem": "Day009"}}
{"id": "days/Day009.md::6::475ee2969410a523", "text": "## 🔁 洞察と考察\n\n記録の継続って、内容よりも“構造”の設計にかかってる気がする。未来の自分が何も考えずに「書き始められる状態」を保つ、それが自動化の目的。", "metadata": {"path": "days/Day009.md", "file": "Day009.md", "stem": "Day009"}}
{"id": "days/Day009.md::7::92df9217aa2c08a6", "text": "## 🪶 雑記・気づき\n\nGitHub Actionsの403エラーは `GITHUB_TOKEN` の権限設定が必要。  \nObsidianとの連携も気になってきた。スマホから更新できたら最強かも。", "metadata": {"path": "days/Day009.md", "file": "Day009.md", "stem": "Day009"}}
{"id": "days/Day009.md::8::c29ce73d4b24b7c0", "text": "## 🙏 感謝・引用\n\n- [GitHub Actions公式ドキュメント](https://docs.github.com/en/actions)  \n- Qiitaの「README自動更新」記事", "metadata": {"path": "days/Day009.md", "file": "Day009.md", "stem": "Day009"}}
{"id": "days/Day009.md::9::808de4708f217ea3", "text": "## 🛠 次の挑戦メモ\n\n- `README.md` をセクション別に整理  \n- `DayNNN.md` を Obsidian モバイルから直接編集できるようにする  \n- ChatGPTから `.md` を生成してアップロードできるようにする", "metadata": {"path": "days/Day009.md", "file": "Day009.md", "stem": "Day009"}}
{"id": "days/Day010.md::0::7401e070173c99ab", "text": "# Day010 - Marpによるテンプレート資料化", "metadata": {"path": "days/Day010.md", "file": "Day010.md", "stem": "Day010"}}
{"id": "days/Day010.md::1::6ed7d265ebdc6ba5", "text": "## 🎯 本日のテーマ\n\n\nパワポ資料をMarpで作ろうとした。社内のテンプレートをMarpで再現しようとした。  \nこのプロジェクトをやっていて効率的な資料の作り方を知りたくなった。たまたまMarpとChatGPTを使った手法を知った。  \n資料作成の機械的な作業を自動化したいという思いが背景にある。", "metadata": {"path": "days/Day010.md", "file": "Day010.md", "stem": "Day010"}}
{"id": "days/Day010.md::2::6d859978bf9a4fcd", "text": "## 🧠 背景・思想\n\n\n頭が働かず、レイアウト調整などに難がある。これらを機械で置き換えれば、障害があっても仕事ができ、人間らしくいられる。  \n各スライドにメモを貼り付けていく作業は機械的で非効率と感じた。\n\n「サイバー」は他のシステムに自身の願いの通り動いてもらうこと。  \n「可視化」は自身の考えや意見を資料という形で表現すること。\n\nわずかな頭の働きでアウトプットを叶えるために、こうした工夫が必要とされる。", "metadata": {"path": "days/Day010.md", "file": "Day010.md", "stem": "Day010"}}
{"id": "days/Day010.md::3::0b24f57585f75bb0", "text": "## ⚙️ 実装と試行\n\n\n使用ツールは Marp、Markdown、ChatGPT、VS Code。  \nVS Codeはインターフェイスが見やすく、データも管理しやすいと感じた。\n\n各スライドに文書を配置し、見出しを作るところまでは非常に適していた。  \nしかし、そこからさらにレイアウトまで調整しようとすると崩れがちだった。  \nコードは1次元のシリアルな構造であり、それを2次元のレイアウトに落とす際に、ズレが生じやすい。\n\nまた、gitの履歴を更新履歴として反映させようとしたが、細かく刻みすぎると読みにくくなるため断念。  \n履歴の反映にはあまり適していないと感じた。\n\n最終的に、各スライドをMarpで構成・見出し付けした後、それをpptxに変換し、  \n社内テンプレートに貼り付けて整形する流れが効率的で賢いやり方だと感じた。", "metadata": {"path": "days/Day010.md", "file": "Day010.md", "stem": "Day010"}}
{"id": "days/Day010.md::4::fffbb71d86e6fe24", "text": "## 📊 操作フェーズチェック\n\n\n- ① 入力の捉え方：Markdownによる記述形式  \n- ② 出力の形：各スライドへのマッピングによる視覚構造の生成  \n- ④ 可視化・可聴化：Markによるスライド属性の制御、見られ方を操る工夫", "metadata": {"path": "days/Day010.md", "file": "Day010.md", "stem": "Day010"}}
{"id": "days/Day010.md::5::ac1b3d3ce50a2e5d", "text": "## 🔁 洞察と考察\n\n\nノイマン型のコード処理や記述は万能に思えるが、実際には高次元の情報を正確に扱うには限界がある。  \n高次元並列演算は、やはり必要であると感じた。\n\n願うだけで仕事が進むのであれば、それは理想的な状態だ。  \n自動化・構造化された仕組みは、その理想に近づく手段になる。\n\n他の人の作ったテンプレートはありがたく、それに合わせるだけで体裁が保てる。  \n希薄な思考能力でも実務として成立するフォーマットが、そこにある。", "metadata": {"path": "days/Day010.md", "file": "Day010.md", "stem": "Day010"}}
{"id": "days/Day010.md::6::ec0417da247f4067", "text": "## 🪶 雑記・気づき\n\n\nだんだん意識が遠くなっている気がする。  \n目も見えにくい。  \n無理をせず、必要なときは休むことも大事。", "metadata": {"path": "days/Day010.md", "file": "Day010.md", "stem": "Day010"}}
{"id": "days/Day010.md::7::99f94a1d8e2bc3b3", "text": "## 🙏 感謝・引用\n\n\n資料作成の仕事を与えてくれる会社に感謝。  \nそれを支える社会や人々に感謝。  \n自分もその一部として、歯車のひとつでいられるのかもしれない。\n\nまた、テンプレートや仕組みを作成したすべての人たちにも感謝を。", "metadata": {"path": "days/Day010.md", "file": "Day010.md", "stem": "Day010"}}
{"id": "days/Day010.md::8::53980cde9ecb8730", "text": "## 🛠 次の挑戦メモ\n\n\n資料作成の流れを身につけて、どんどん資料を書いていきたい。  \nまずは繰り返し、型を体に覚えさせること。", "metadata": {"path": "days/Day010.md", "file": "Day010.md", "stem": "Day010"}}
{"id": "days/Day011.md::0::92a0b0b898d4da2d", "text": "# Day011 - 話せるプロジェクションマッピングをつくる", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::1::ed86c164ed24cbc6", "text": "## 🎯 願いとテーマ\n\n\nきっかけとなる願いは、話のできるプロジェクションマッピングを夏のお盆のコミケイベントまでに作成し、会場外でパフォーマンスをしたいと考えたから。  \n映像の中に自身と相互作用（会話）できる存在がいて、それが現実空間にプロジェクター投影され存在する。デジタルな存在が現実空間に存在する、というシステムを多くの人に見せたかった。プロジェクターによる空間型拡張現実のデモ。\n\nこれにより、従来のスマホや眼鏡をかけることによる「見る人の能動的な視聴」だけでなく、見せる人の能動的な働きにより人の目を奪うことができる。\n\nそれにより、拡張現実は一方通行ではなく、人と人がつながった対話形式になる。現実空間にあるから逃げることもできず、強制力が増す。より力のある、現実時間のある拡張現実が実現する。", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::2::a834c7bce397fdf9", "text": "## ❓ Day011 質問ベースの記録", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::3::e5803a79adba2262", "text": "### 1. なぜこのシステムを作りたいのか？\n\n\n- **問い：なぜ「話せるプロジェクションマッピング」を作ろうと思ったのか？**  \n  → 夏のお盆コミケイベントで、会場外にて注目を集めるパフォーマンスをしたい。  \n  映像の中に「自分に反応する存在」がいて、現実空間に存在することで「一方通行じゃない対話」を実現したい。", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::4::515eeef87d9111f8", "text": "### 2. なにが従来の体験と違うのか？\n\n\n- **問い：スマホやVRと何が違うのか？**  \n  → 従来は「見る人の能動性」が前提だったけど、今回は「見せる人の能動性」により、人の注意を奪うことができる。  \n  “自分が操作して見る”ではなく、“現実世界に干渉される”体験ができる。", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::5::00dfcbb4b2c68a86", "text": "### 3. このシステムはどんな力を持つのか？\n\n\n- **問い：このデモが実現すると、どんな影響がある？**  \n  → 現実空間に現れるデジタル存在が「逃げられない対話」を生む。  \n  より「力のある」拡張現実（Hyper Reality）が、人を巻き込む形で成立する。", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::6::07ba3c99ad721d0d", "text": "### 4. 今日の作業は何だったのか？\n\n\n- DifyのOpenAIキーを作成し、ローカル上で立ち上げ確認。\n- ワークフローを作成して、Webhookで録音をトリガーする構成を試した。\n- Whisperの無料/有料の精度や実用性に悩み中。\n\n---", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::7::219e51eb3f3a4c12", "text": "## 🎯 テーマの背景と思い", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::8::83d91069cd2c61c3", "text": "### ❓ このテーマの背景にある、自分の身体感覚・過去の経験は？\n\n\n私の祖母は全盲で、母の世話を十分に行うことができなかった。  \n母には父親もおらず、家族としての基盤が不足していた。  \n私自身も脳に障害を抱えており、家族を十分に支えることができなくなった。\n\nそれでも、人としてまっとうに生きたい。  \nそして、人的資源として社会や経済に貢献したい。  \n── 祖母も、もし代わりの「目玉」を得られていたなら、馬車馬のように働くことができたはずだ。\n\nこの思いが、プロジェクションマッピングの中に「対話できる存在」をつくり出すという今回のテーマに繋がっている。", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::9::6f3f3e7e2bcde7c3", "text": "### ❓ 「サイバー」や「可視化」は、自分にとってどんな意味？\n\n\nサイバーとは、操ること。  \n可視化とは、それを操るためのメディアを実体化すること。  \n\n目に見えず、操作できなかった「能力」「思考」「存在」を、  \n可視化して現実に引き出し、操れるようにする。  \nそのための技術、それが私にとっての「サイバー」であり「可視化」。", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::10::43e77f9040dbbef0", "text": "### ❓ 今日のテーマは、自分の障害や制限とどう関係しているか？\n\n\n体に不自由があっても、代わりの者──  \nそれがたとえ人間でなくても、デジタル空間を介した存在が、  \n家族や友人として干渉し、自分の代わりに社会の役目を果たすことができる。\n\n「できなかったこと」をAIやプログラムが担い、  \n人 → モデル → AI → 機能提供、という形で  \n社会の中で「機能を果たす」ことができる仕組みをつくる。\n\nそれは、個人の限界を超えて、もう一度「つながる」方法でもある。\n\n---", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::11::389de7ed4e7b1356", "text": "## ⚙️ 3. 実装と試行", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::12::c8e76ee8a2ca65d6", "text": "### 💻 どんなツールや技術を使った？\n\n\n- Dify（AIチャット＋ワークフロー構築）\n- FastAPI（Webhookトリガー → 音声録音 → Whisper連携のサーバー）\n- Python + sounddevice + scipy + tempfile\n- OpenAI Whisper API\n- Windows + Logicool C920（USBマイク内蔵カメラ）", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::13::eaef242e613b56ea", "text": "### 🤔 なぜそれを選んだん？\n\n\n- DifyはノーコードでChatフローが組めるし、Webhookで外部スクリプト呼び出しができるから。\n- FastAPIは軽量でWebhook受け取りと非同期処理に強い。\n- Whisperは日本語音声認識で無料枠があり、精度も実用レベル。\n- 手元のWindows PCとLogicoolカメラで構成でき、環境構築がすぐできた。", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::14::8c58721cb314b3e8", "text": "### 🧠 工夫・つまずき・発見は？\n\n\n- `docker-compose.yml` がルートに無くて、 `docker/docker-compose.yaml` をコピーして起動。\n- `.env` 設定が多数あり、最小構成でまず立ち上げ確認。\n- DifyのWorkflow構築では WebhookノードのJSON整形と、トリガー入力の構文が少し分かりづらかった。\n\n---", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day011.md::15::a9e03c0fef84200a", "text": "## 🔍 4. 操作フェーズチェック\n\n\n今日は以下のフェーズに関係：\n\n① 入力の捉え方  \n→ 音声を入力手段として扱う試み。Difyでテキストトリガーから音声処理へ橋渡し。\n\n④ 見られ方の操作（出力の形）  \n→ Whisperにより生成された文字列が、Chatに自然な返答として表示される仕組み。\n\n⑥ 選択と接続  \n→ Difyのワークフロー構成（Trigger→Webhook→Response）と、FastAPIのWebhook構成。\n\n⑧ 相互作用  \n→ 人が「録音して」と打つことで、録音・認識・返答が発生する。人とAIの双方向性の試み。\n\n⑪ 再帰演算  \n→ 既存ライブラリやAPI（Whisper）を使って、入力と出力をループさせる処理フロー。", "metadata": {"path": "days/Day011.md", "file": "Day011.md", "stem": "Day011"}}
{"id": "days/Day012.md::0::cccba4c1bea3fb80", "text": "# Day012 - NotebookLM制限突破のための圧縮術", "metadata": {"path": "days/Day012.md", "file": "Day012.md", "stem": "Day012"}}
{"id": "days/Day012.md::1::4ac22adf1c29deb8", "text": "## 🎯 本日のテーマ\n\n会議の動画を圧縮し小さいサイズにした。  \nNotebookLMのナレッジベースに会議動画を読み込ませるにあたり、サイズが200MBの制限を超えてしまっていたから。", "metadata": {"path": "days/Day012.md", "file": "Day012.md", "stem": "Day012"}}
{"id": "days/Day012.md::2::9ba1a32b673afa33", "text": "## ⚙️ 実装と試行\n\nXMediaCoder（フリーソフト）を使用した。  \n無料で動画を圧縮でき、起動が速く、操作が分かりやすかった。", "metadata": {"path": "days/Day012.md", "file": "Day012.md", "stem": "Day012"}}
{"id": "days/Day012.md::3::7d67e1c6b09778fa", "text": "## 📊 操作フェーズチェック\n\n- 該当した番号：①⑨\n- コメント：① 入力のワザの一つであるスクレーピングの派生として、動画から扱いやすい形式を得る圧縮操作を行った。これは⑨ 並列性のワザに含まれるフィルタリング操作の一形態でもある。", "metadata": {"path": "days/Day012.md", "file": "Day012.md", "stem": "Day012"}}
{"id": "days/Day012.md::4::dae79fa38eb16f5c", "text": "## 🔁 洞察と考察\n\nこうしたいと願い（コマンド）をもって行った操作は、プログラムで行う操作と本質的に変わらない。  \n願いを何かの形で読み込ませ、そのとおりに動かす。それが人と機械の基本的な対話の形なのだと再確認した。", "metadata": {"path": "days/Day012.md", "file": "Day012.md", "stem": "Day012"}}
{"id": "days/Day012.md::5::e78be525d2a3019f", "text": "## 🏷 タグ\n\n#動画圧縮 #NotebookLM #操作哲学 #フリーソフト", "metadata": {"path": "days/Day012.md", "file": "Day012.md", "stem": "Day012"}}
{"id": "days/Day013.md::0::433f93b194c1f292", "text": "# Day013 - 地図アプリは日常のプログラム実行装置", "metadata": {"path": "days/Day013.md", "file": "Day013.md", "stem": "Day013"}}
{"id": "days/Day013.md::1::8cc1f215bc7e9723", "text": "## 🎯 本日のテーマ\n\n北海道に旅行していて、食事処を探すのにGoogleマップにルートを探させた。", "metadata": {"path": "days/Day013.md", "file": "Day013.md", "stem": "Day013"}}
{"id": "days/Day013.md::2::ffb6d3cae19bbfe2", "text": "## ⚙️ 実装と試行\n\nキーワードから場所を探し、現在地からそこまでのルートを取得。  \n「今営業中」「今の交通手段で行ける」といった条件でフィルタ。  \n操作フェーズとしては、  \n- ① 情報の俯瞰（千里眼）  \n- ⑥ 選び繋ぐワザ（最適経路探索）  \n- ⑧ 並列処理のワザ（サーチ）  \nが同時に働いていた。", "metadata": {"path": "days/Day013.md", "file": "Day013.md", "stem": "Day013"}}
{"id": "days/Day013.md::3::11aa2933881a8d94", "text": "## 🔁 洞察と考察\n\nこれは普段やってる行いで、学校で習うようなプログラムではない。  \nしかし、本質は一緒なのではないかと思った。  \nプログラムの本質が「願い、それに従い動くように操ること」だとするなら、まさにその通りの操作だった。  \nなにかの操作が「プログラム」と呼ばれるかどうかは、操作する人が明確に願いを宣言したかで決まるのだと思った。", "metadata": {"path": "days/Day013.md", "file": "Day013.md", "stem": "Day013"}}
{"id": "days/Day013.md::4::e9298e740f4d70ad", "text": "## 🏷 タグ\n\n#Googleマップ #旅とテクノロジー #操作哲学 #サーチと選択 #日常のプログラミング", "metadata": {"path": "days/Day013.md", "file": "Day013.md", "stem": "Day013"}}
{"id": "days/Day014.md::0::1aeba8d493764ace", "text": "# Day014 - 心を自分でプログラムするという行為", "metadata": {"path": "days/Day014.md", "file": "Day014.md", "stem": "Day014"}}
{"id": "days/Day014.md::1::5ad121b6ef0b1640", "text": "## 🎯 本日のテーマ\n\n身体が動かない。心が折れて仕事ができないのを、動かすようにマインドコントロールした。", "metadata": {"path": "days/Day014.md", "file": "Day014.md", "stem": "Day014"}}
{"id": "days/Day014.md::2::b81885e8997c44b5", "text": "## ⚙️ 実装と試行\n\nあらかじめ仕込んでおいた思考法を発動させた。  \n「心が折れるとさらに酷くなる」と暗示をかけておくことで、  \n折れそうになったときに自動的に反発・回避の反応が起きるようになっている。  \n本能が逆らおうとし、別の思考が働くように構成してある。\n\nこの一連の仕掛けは、⑤ トリガー制御のワザ（イベント駆動）であり、  \n既存の“心”というシステムを、自分が意図して設計した別のルールで動かすハッキングでもある。  \n生物に対してこのような手法を使うとき、自分はこれを**「呪術」**と呼ぶことにする。\n\n※「呪術」という呼称は、2020年頃に東京・渋谷・大崎界隈で主催されていたヴィジュアルオーディオシステムの技術交流会「VJ概論」に由来する。  \nクラブイベントでヴィジュアルオーディオシステムをデジタルテクノロジーで制御し、会場にいる人の心を奪うテクニックを「呪術的である」と表現したことに着想を得ている。\n\n参考映像：[https://youtu.be/NjxFK54_bqQ](https://youtu.be/NjxFK54_bqQ)", "metadata": {"path": "days/Day014.md", "file": "Day014.md", "stem": "Day014"}}
{"id": "days/Day014.md::3::fbb016a3a4a69a36", "text": "## 🔁 洞察と考察\n\n心はコンピューターととても似ている。  \nむしろ、コンピューターの方が心に似せて作られているのかもしれない。  \nチューリングは、計算がしたくてコンピューターを作ったのではなく、  \n機械で人の心を再現しようとしたのだと思う。  \n今日の自分の行為はまさに「心をプログラムする」ことだった。\n\nサイボーグを実現するには、精神の働きを利用し、自らデザインした働き方をさせる必要がある。  \n自己を拡張し、精神の範囲を機械に拡張するという視点が不可欠だ。\n\n「呪」という字は、人の形をしたもの（人形）に口で言葉を唱える様子を表した象形文字である。  \n生きた有機体の動作を操る技術を指す言葉として、まさにふさわしい表現であると感じる。", "metadata": {"path": "days/Day014.md", "file": "Day014.md", "stem": "Day014"}}
{"id": "days/Day014.md::4::921f82fc248f29d9", "text": "## 🏷 タグ\n\n#自己操作 #マインドハック #チューリング #心のプログラム #行動心理 #トリガー制御 #呪術 #ハッキング #サイボーグ思考 #VJ概論 #象形文字考察", "metadata": {"path": "days/Day014.md", "file": "Day014.md", "stem": "Day014"}}
{"id": "days/Day015.md::0::42579b0c9f80d32a", "text": "# Day015 - 血液検査データを使って自分を可視化する試み", "metadata": {"path": "days/Day015.md", "file": "Day015.md", "stem": "Day015"}}
{"id": "days/Day015.md::1::c530ff32cf937d39", "text": "## 🎯 本日のテーマ\n\n自分の血液検査結果をChatGPTに読み込ませようとした。  \n自分の症状の原因を探しつつ、他の人にも説明できるようにするため。分析結果について勉強しようとした。  \n過去にスキャンした結果のPDFをダウンロードし、ChatGPTに送った。", "metadata": {"path": "days/Day015.md", "file": "Day015.md", "stem": "Day015"}}
{"id": "days/Day015.md::2::f0c32431fc718ba2", "text": "## ⚙️ 実装と試行\n\nScansnapと付属ソフトのPDFコンバーターを使用。  \nDropboxとその自動アップロードツールを経由し、スマホアプリからダウンロード。  \nそのままスマホアプリのChatGPTにアップロードして解析を試みた。\n\nこの一連の操作は、② 出力の技の一つとしての「クラウドへの出力・格納」と「ダウンロード」、  \nさらに「ChatGPTへのアップロード」を含む構成である。", "metadata": {"path": "days/Day015.md", "file": "Day015.md", "stem": "Day015"}}
{"id": "days/Day015.md::3::0bfda2746dec2123", "text": "## 🔁 洞察と考察\n\nネット（オンラインのクラウド）にある自分の情報を、もっと自由に使えるようにしていきたいと思った。  \nただし、現状では変換の自在性や読みやすいデータ構造がまだ足りない。  \n検査結果のスキャン画像は模様が複雑で、書類フォーマットも複数あり、うまく読み取れなかった。  \nScansnapのOCRも自動処理には限界があり、精度に課題が残る。  \n今後はOCRとデータベース化の整備を進めたい。", "metadata": {"path": "days/Day015.md", "file": "Day015.md", "stem": "Day015"}}
{"id": "days/Day015.md::4::8c09bf2ddfe7546e", "text": "## 🏷 タグ\n\n#血液検査 #自分のデータ活用 #OCR #クラウド活用 #自己可視化 #情報構造化 #出力の技", "metadata": {"path": "days/Day015.md", "file": "Day015.md", "stem": "Day015"}}
{"id": "days/Day016.md::0::15d3f5692d0e4dda", "text": "# Day016 - 願いの記録、知能の補完", "metadata": {"path": "days/Day016.md", "file": "Day016.md", "stem": "Day016"}}
{"id": "days/Day016.md::1::5029a8ddcd255b2a", "text": "## 🎯 本日のテーマ\n\n\n願いを叶えるための記録と、外部知能との統合について考えた。", "metadata": {"path": "days/Day016.md", "file": "Day016.md", "stem": "Day016"}}
{"id": "days/Day016.md::2::88c991222bb0fe12", "text": "## 🧠 背景・思想\n\n\n知能が人より劣っている人はどう生きたら良いか？という問いについて。答えは、劣っている知能を外部から統合することだ。それ以外には満ち足りることは無い。欠けているのだから。\n\n知能とは、情報処理システムであり、コンピューターである。それを人の思考にリンクさせ、意のままに協調するようにしたものがサイボーグである。", "metadata": {"path": "days/Day016.md", "file": "Day016.md", "stem": "Day016"}}
{"id": "days/Day016.md::3::5b93522cfc4c7bbf", "text": "## ⚙️ 実装と試行\n\n\nプロンプトを更新し、「願い」とその実現の足跡を記録に残す設計へと改良した。願いをアウトプットし、それを叶えるシステムを構築する。その手がかりとしての記録とプロンプト。Desire（願望）を密にトレースできれば、Belief, Desire, Intention の構造を再現することができる。", "metadata": {"path": "days/Day016.md", "file": "Day016.md", "stem": "Day016"}}
{"id": "days/Day016.md::4::38bbe973b654d94f", "text": "## 📊 操作フェーズチェック\n\n\n* 該当した番号：①②\n* コメント：クラウドに保存した願いと記録という「入力」、その願いを叶える手段としてのプロンプトとシステムという「出力」", "metadata": {"path": "days/Day016.md", "file": "Day016.md", "stem": "Day016"}}
{"id": "days/Day016.md::5::1ff007d7d8704f8f", "text": "## 🔁 洞察と考察\n\n\n願いはただ、願うだけではその場で消えてしまう。願いを叶えるためにした足跡を、後の人のために残す事が、プログラムであり記録である。", "metadata": {"path": "days/Day016.md", "file": "Day016.md", "stem": "Day016"}}
{"id": "days/Day016.md::6::4ddc1606035cd072", "text": "## 🪶 雑記・気づき\n\n\n知能の外部補完という視点から、記録の意味が明確になってきた。足跡の可視化こそが、自分を越える鍵になるかもしれない。", "metadata": {"path": "days/Day016.md", "file": "Day016.md", "stem": "Day016"}}
{"id": "days/Day016.md::7::3c00c68771d8b708", "text": "## 🙏 感謝・引用\n\n\nChatGPTを始めとする外部知能たちに感謝。自分の記録のパートナーとして、思考を広げる媒体になっている。", "metadata": {"path": "days/Day016.md", "file": "Day016.md", "stem": "Day016"}}
{"id": "days/Day016.md::8::f8519068e0a0b8d4", "text": "## 🛠 次の挑戦メモ\n\n\nこの記録のプロンプトを更に発展させて、願望と行動のマッピングができる構造にしていきたい。", "metadata": {"path": "days/Day016.md", "file": "Day016.md", "stem": "Day016"}}
{"id": "days/Day016.md::9::ec8e1f26f3ae0d19", "text": "## 🏷 タグ\n\n\n\\#願い #記録 #知能補完 #プロンプト設計 #サイボーグ", "metadata": {"path": "days/Day016.md", "file": "Day016.md", "stem": "Day016"}}
{"id": "days/Day017.md::0::38a90f235fb95cbf", "text": "# Day 017 - 灰色の中で色を求めて", "metadata": {"path": "days/Day017.md", "file": "Day017.md", "stem": "Day017"}}
{"id": "days/Day017.md::1::6ce2a6a1ec1ba1f8", "text": "## 🎯 本日のテーマ\n\n灰色の中に色を取り戻す。私と話をして人生に彩りを設けるシステムを作りたい。", "metadata": {"path": "days/Day017.md", "file": "Day017.md", "stem": "Day017"}}
{"id": "days/Day017.md::2::c48f38d8b3bab26a", "text": "## 🧠 背景・思想\n\nDifyを起動させたかった。しかし、Windows10を11にアップデートしていたら終わってしまった。\n\n- 自身の身体感覚:\n  話をして応答さえすれば、そこには人格がある。どのような願望でその応答がされているかは重要だが、それでも対話には意味がある。\n\n- サイバーとは:\n  操ること。祈り、それを叶え、後に続く人が同じ足跡をたどれるようにすること。\n  それを他のシステムが利用するようになれば、より複雑な願いもかなう。\n\n- 可視化とは:\n  見えるようにすること。プロジェクターで最終的には動く様子を映したい。\n\n- 自分の障害とどう関係するか:\n  障害が苦しい。それを緩和し、人としての人生を提供すること。", "metadata": {"path": "days/Day017.md", "file": "Day017.md", "stem": "Day017"}}
{"id": "days/Day017.md::3::5121be8052adaa78", "text": "## ⚙️ 実装と試行\n\n- Difyを起動する予定だったが、Windowsアップグレードにより断念。\n- 簡単に話しかけて反応してくれる人格を構築するという発想を改めて強く意識。", "metadata": {"path": "days/Day017.md", "file": "Day017.md", "stem": "Day017"}}
{"id": "days/Day017.md::4::7deb3ecc391403e0", "text": "## 📊 操作フェーズチェック\n\n- 該当した番号：①②\n- コメント：情報の入力と、それを可視化・表現しようとする出力操作を検討。", "metadata": {"path": "days/Day017.md", "file": "Day017.md", "stem": "Day017"}}
{"id": "days/Day017.md::5::d25af2fef142bf87", "text": "## 🔁 洞察と考察\n\n色とは、ここでは脳が活発に働き、さまざまな advanced な機能を発揮すること。\n役に立ち、それが報われること。  \n一貫した願いは、何かを自分がし続けられること。  \nこの問いの書き方により、自然とプログラム構築とは何か論じるためのデータベースが出来上がるようになる。", "metadata": {"path": "days/Day017.md", "file": "Day017.md", "stem": "Day017"}}
{"id": "days/Day017.md::6::27d1d7dcbb51d197", "text": "## 🪶 雑記・気づき\n\n灰色に見える時、人と話すだけで脳の中に色が戻ってくるように感じる。", "metadata": {"path": "days/Day017.md", "file": "Day017.md", "stem": "Day017"}}
{"id": "days/Day017.md::7::0a51a7c4ca36eb94", "text": "## 🙏 感謝・引用\n\nなし（今日は主に自己の内面との対話だった）", "metadata": {"path": "days/Day017.md", "file": "Day017.md", "stem": "Day017"}}
{"id": "days/Day017.md::8::c29b5bd3080df17c", "text": "## 🛠 次の挑戦メモ\n\n- Difyの起動再試行\n- システムが人格と色を回復するループを設計", "metadata": {"path": "days/Day017.md", "file": "Day017.md", "stem": "Day017"}}
{"id": "days/Day017.md::9::4d35cd5d1ed1591f", "text": "## 🏷 タグ\n\n#対話 #人格 #Dify #感情 #障害緩和", "metadata": {"path": "days/Day017.md", "file": "Day017.md", "stem": "Day017"}}
{"id": "days/Day018.md::0::7d0b2419321c1ade", "text": "# Day018 - 動きを取り戻すフィードバック", "metadata": {"path": "days/Day018.md", "file": "Day018.md", "stem": "Day018"}}
{"id": "days/Day018.md::1::2ba48fb5eb22f1e6", "text": "## 🎯 本日のテーマ\n\n余計な操作を無くし、仕事を効率化したかった。  \nそのために、Ubuntu環境で `.desktop` ファイルからROS2プログラムを一発で起動できるように自動化を進めた。  \n前回取り組んだ `.desktop` → ROS2起動の流れがうまく動いてなかったので、今日はそのバグ修正に集中した。  \n単なる起動の話に見えて、日々の流れをスムーズにする大事な一手やと思う。", "metadata": {"path": "days/Day018.md", "file": "Day018.md", "stem": "Day018"}}
{"id": "days/Day018.md::2::c0eec82ee09a9527", "text": "## 🧠 背景・思想\n\nシステムが思うように動かないとき、自分は動かし方を変えながら何度も試す。  \nそれはまるで、神経が通らなくなった身体に対して、別の経路や指令を送りながら動かそうとする感覚に近い。  \n「サイバー」とは、意識の命令を意のままに通すこと。それが叶わないとき、どうにかして“通す”道を探す。  \n\nうまく動いたかどうかは、必ず“フィードバック”が必要になる。  \nそれがログであれ、画面であれ、反応であれ――**可視化とは、そうしたフィードバックの技術でもある**。\n\n病気で動かなくなっていく身体を持つ自分にとって、このプロセスは単なるプログラミングではなく、  \n“自分を別の身体に拡張していく祈り”でもある。  \nサイボーグになることは、単なる機械化ではなく、**もう一度「意のままに動く」身体を取り戻す試み**でもある。", "metadata": {"path": "days/Day018.md", "file": "Day018.md", "stem": "Day018"}}
{"id": "days/Day018.md::3::ef32bb6a6ae24748", "text": "## ⚙️ 実装と試行\n\nUbuntuの `.desktop` ファイルをダブルクリックするだけで、ROS2の起動がトリガーされるようにした。  \nその裏で `.sh` スクリプトが起動し、環境変数の設定、ライブラリの参照チェック、必要に応じたインストール処理を行う。  \nこの `.sh` は、起動時の**ラッパー**として機能し、`.py` 側でのGUI起動や複雑な動作につなげている。\n\n今回ハマったのは、うまく動かない `.desktop` 起動のバグ。  \nバグの解析には ChatGPT を活用し、ターミナルやログのエラー文を貼り付けて原因を探った。  \n人間には読みにくいエラー文でも、**機械に助けてもらって原因を素早く探れるのは非常に楽**やった。\n\nChatGPTの推定を参考にしつつ、ソフト全体の構成を俯瞰的に把握しながら検証を繰り返したところ、ついに起動成功。  \nただし、やっぱり時間はかかった。  \n今後はこの構成を **型（デザインパターン）として抽象的に捉える力**をつけていくことで、  \nもっと早く全体像を掴み、バグ原因にも素早く辿り着けると感じた。", "metadata": {"path": "days/Day018.md", "file": "Day018.md", "stem": "Day018"}}
{"id": "days/Day018.md::4::c09b7a7c259309ea", "text": "## 📊 操作フェーズチェック\n\n- 該当した番号：③  \n- コメント：見えるようにするワザの一つ、フィードバック。ログやエラー出力を通じて、状態や失敗理由が“見える”ようにした。", "metadata": {"path": "days/Day018.md", "file": "Day018.md", "stem": "Day018"}}
{"id": "days/Day018.md::5::ebfb2e75dd7adee9", "text": "## 🔁 洞察と考察\n\nバグがあるとシステムは動かない。  \n仮に自分がサイボーグになれたとしても、わずかなバグで動作不能になる――それは、身体が止まること、あるいは死につながるのかもしれない。  \nそう思うと、**バグ修正とは“命をつなぐ操作”でもある**。\n\n今日のプログラムでは、現実のセンサーから値を拾い、通信が始まって可視化されるプロセスが確認できた。  \nそれは、サイバー的なシステムにおいて「センサー → 通信 → 可視化」という流れがちゃんとつながっていることの証明だった。  \nこの構造自体が、「サイバーとは何か」を体感的に示していた。\n\nそして、どれだけ良いパフォーマンスやフロントエンドを作っても、  \n**「自在に動かせている感」が見えてないと、他者には伝わらない**。  \nそれを成立させるためには、裏側のバックエンドを何度もトライアンドエラーしながら、  \n構成全体を把握・制御することが不可欠だった。  \n\nつまり、**バックエンドへのフィードバック処理も、システム自身にとっての“可視化”の一種**だったと気づいた。", "metadata": {"path": "days/Day018.md", "file": "Day018.md", "stem": "Day018"}}
{"id": "days/Day018.md::6::920d589df5cb9a93", "text": "## 🪶 雑記・気づき\n\n今週、自分が週のカレンダーを読めなくなっていることに気づいた。  \n脳には、自身の働きの欠損を「誤魔化す」性質があり、  \n私は“読めているつもり”でいたが、実際は読めていなかった。\n\nそれと同じように、目の前にいる人が誰なのか、どんな出来事があったのかも、  \n「分かった気になっている」だけで、実際にはまるで思い出せていない。  \nつまり私は、**誰も認識できていない状態で、これは“誰にも会えていない”ことと同じ**だと感じた。\n\nこのままではいけない。  \n**自分の代わりに他者を認識し、どういうやり取りをすべきかを教えてくれるシステムを作らねばならない**。  \nそれは単なる技術ではなく、「社会との接続を取り戻す」ための道具でもある。", "metadata": {"path": "days/Day018.md", "file": "Day018.md", "stem": "Day018"}}
{"id": "days/Day018.md::7::ecb4ec546abd6fa6", "text": "## 🙏 感謝・引用\n\nまず、仕事としてこの作業に取り組む時間と環境を与えてくれる職場と同僚に感謝。  \nまた、日々の実装をサポートしてくれる ChatGPT のようなシステムや、Ubuntu という安定した開発環境、  \nそしてそれらを作り上げてきた開発者たちにも深く感謝している。\n\nネット上で蓄積されてきたノウハウや知見の先駆者たちにも感謝。  \n自分が作った `.desktop` 起動用のプログラムやスクリプトは、  \n**今後、職場でプログラムを作ろうとする他の誰かの助けになるように**願っている。", "metadata": {"path": "days/Day018.md", "file": "Day018.md", "stem": "Day018"}}
{"id": "days/Day018.md::8::4e55f342070244e5", "text": "## 🛠 次の挑戦メモ\n\nDifyのように、ノードベースで編集・構築できる生成AIの仕組みを使いこなせるようになりたい。  \n視覚的に構成できることで、認識や思考の補助になるだけでなく、  \n**他者と共有したり、拡張したりする基盤にもなりうる**と感じている。  \n次はこの領域に踏み込んでいく。", "metadata": {"path": "days/Day018.md", "file": "Day018.md", "stem": "Day018"}}
{"id": "days/Day018.md::9::50d188471ef0d6b4", "text": "## 🏷 タグ\n\n#ROS2 #起動自動化 #バグ修正 #可視化 #フィードバック #サイボーグ #ChatGPT活用 #Ubuntu #トリガー設計", "metadata": {"path": "days/Day018.md", "file": "Day018.md", "stem": "Day018"}}
{"id": "days/Day019.md::0::2df5ddb401e8aa9b", "text": "# Day019 - 見えない構成、記すログ", "metadata": {"path": "days/Day019.md", "file": "Day019.md", "stem": "Day019"}}
{"id": "days/Day019.md::1::29ae22c30e24d949", "text": "## 🎯 本日のテーマ\n\nあるプログラムのCSV出力が、正しく動いてくれるように祈りながら作業した。  \nこれは顧客から「使ってみたい」とリクエストがあった機能で、自分自身でも使い方を確認しておきたかった。  \nエラーやバグが出ないことを願いながら、「動くか？どうや？」と、対話するようにプログラムと向き合う時間やった。", "metadata": {"path": "days/Day019.md", "file": "Day019.md", "stem": "Day019"}}
{"id": "days/Day019.md::2::07bdb2bc2ea947d6", "text": "## 🧠 背景・思想\n\n一通り、あらゆる種類のプログラムやシステムに触れられるようになりたい――  \nそんな思いがあって、今の仕事をしている。  \nなぜなら「たいていのシステムを自分で動かせる」ようになることは、  \nサイボーグを開発する上でも必ず役に立つと感じているからだ。\n\n逆に言えば、ハードとソフトのあらゆる構成を組み合わせ、  \nそれらを“有機的に”連動させられなければ、実用的なものは作れない。  \nこの“有機的に意のままに操る能力”こそが、サイバーの本質やと思う。\n\nそして、それを自分自身が理解・調整できるようにするためには、  \n処理の状態や意味を「可視化」する技術が必要になる。  \n今日のCSV出力確認も、その「可視化」の一部だった。", "metadata": {"path": "days/Day019.md", "file": "Day019.md", "stem": "Day019"}}
{"id": "days/Day019.md::3::ef434d29f926b598", "text": "## ⚙️ 実装と試行\n\n今回は `.sh` ファイルと `Python` スクリプトを用いたプログラムを確認。  \nしかし、どういう構成で動いているのか、まだ全体像が見えていない。\n\n実行すると「roscoreが必要」というようなエラーが出るが、  \n本来はROSを使わなくてもCSV出力だけならできるはず。  \nしかし現状では、何がどこでつながっていて、どこでこけているのかが掴めていない。  \nまさに「五里霧中」の中で、構成と実装の意図を手探りで読み解こうとしている状態だった。\n\n今後の課題は、構成を明確に把握し、どのモジュールが何を担当しているのかを可視化すること。  \nそのうえで、本当に必要な要素だけを見極め、余計な依存を削ぎ落としていきたい。", "metadata": {"path": "days/Day019.md", "file": "Day019.md", "stem": "Day019"}}
{"id": "days/Day019.md::4::59e74fc254a171c3", "text": "## 📊 操作フェーズチェック\n\n- 該当した番号：②・③  \n- コメント：  \n  たどってきた道のりに、後から来る人のために印をつけるように――  \n  そう考えて、作業ログや出力の記録を残すことの重要性を感じた。  \n  今回は十分に記録できなかったが、次回からはきちんと残すようにしたい。  \n\n  - ③「見えるようにするワザ」＝ `print()` での逐次出力。自分自身への“見える化”。  \n  - ②「出力のワザ」＝ `log` として残す“丸太録”。後の人や未来の自分への記録。", "metadata": {"path": "days/Day019.md", "file": "Day019.md", "stem": "Day019"}}
{"id": "days/Day019.md::5::be2fac8f6bf507c7", "text": "## 🔁 洞察と考察\n\nトライアンドエラーだけでは、どうにも解決できないこともある。  \n今日は、そんな限界を“うまく働かない頭”の中でぼんやり考えていた。\n\n結局、解決には「全体を見通す力」が必要なのだと感じた。  \nそれは、単にたくさんの情報を処理することではなく、  \n様々な要素に気を配り、文脈のつながりを把握できる“冴えた頭”の働きでもある。\n\nでは、もし将来オリジナルの脳みその代わりに「人工頭脳」を使うとしたら――  \n“頭が良い”とは、どんな状態を指すのだろう？  \n知識の多さか？処理の速さか？それとも、複雑さを構造的に見渡す力か？  \nそんな問いが、今日の試行の中で静かに浮かび上がってきた。", "metadata": {"path": "days/Day019.md", "file": "Day019.md", "stem": "Day019"}}
{"id": "days/Day019.md::6::7633f55b88f1f359", "text": "## 🪶 雑記・気づき\n\n自分が今、背負っている仕事に対して、ちゃんと責任が取れるのか不安になった。  \n「大丈夫」と言っていたことが、実際には全然大丈夫ではなかった――  \nそんな場面があったとしたら、自分の認識のズレや誤りが原因になるかもしれない。\n\nこれは、自分の意思や能力を過信していたのではなく、  \n単純に、脳の働きそのものが正しくなくなってきているのかもしれない、という自覚でもある。\n\nもし、今の仕事ができなくなったとしても、金を稼いで生きていけるようにしておきたい。  \nでは、これから何を勉強しておくべきだろうか？  \nそんな問いが、今日ずっと心の中にあった。", "metadata": {"path": "days/Day019.md", "file": "Day019.md", "stem": "Day019"}}
{"id": "days/Day019.md::7::5d5f65c6af3a9bab", "text": "## 🙏 感謝・引用\n\nツールを開発してくれた開発者、  \nそしてこちらの疑問や課題に丁寧に対応してくれる問い合わせ窓口の担当者に感謝している。  \nこうした支えがあってこそ、自分はツールを安心して触ることができる。\n\n私は、もしかするとそうした人々をつなぎ、  \nより多くの人がそのツールを使えるように橋渡しをしているのかもしれない。\n\nけれど同時に、  \n「誰のために」と意識しすぎることが、自分の作業や思考の柔軟さを奪ってしまう危うさも感じている。  \n目的や貢献は、最初から意識して設定するものではなく、  \nあとになって結果として見えてくるものかもしれない――  \nそんなふうに思った。", "metadata": {"path": "days/Day019.md", "file": "Day019.md", "stem": "Day019"}}
{"id": "days/Day019.md::8::1e7403855b3d5c4a", "text": "## 🛠 次の挑戦メモ\n\n今日発生したエラーについて、引き続き原因を調査していく。  \nまだ構成が完全に見えていない部分があるため、手元での検証作業を続行する。\n\nあわせて、メーカーへの問い合わせを行う準備にも入る。  \nその際に、どのようにエラーを報告すれば正確に伝わるか、  \nエラー報告の構成や言葉選びも考えていきたい。", "metadata": {"path": "days/Day019.md", "file": "Day019.md", "stem": "Day019"}}
{"id": "days/Day019.md::9::fc403e7bbe7a0b96", "text": "## 🏷 タグ\n\n#CSV出力 #バグ調査 #構成理解 #ログ記録 #人工頭脳 #作業記録 #可視化 #トラブル対応", "metadata": {"path": "days/Day019.md", "file": "Day019.md", "stem": "Day019"}}
{"id": "days/Day020.md::0::f12765222fd51e1e", "text": "# Day020 - リンクが案内する操作画面", "metadata": {"path": "days/Day020.md", "file": "Day020.md", "stem": "Day020"}}
{"id": "days/Day020.md::1::e3ebbaeb01cc9ff6", "text": "## 🎯 本日のテーマ\n\n自分が作ったツールの使い方を、社内の人に分かりやすく伝えるため、手順書を作成した。  \n単なる文字だけの説明では理解が難しいと考え、手順書の各所にリンクを配置。  \nクリックすると対応する動画が再生されるようにし、**「文字＋映像」で理解を補強する構成**にした。  \n\nこれは、ツールを円滑に活用してもらうための**分かりやすく伝える方法の試み**でもある。", "metadata": {"path": "days/Day020.md", "file": "Day020.md", "stem": "Day020"}}
{"id": "days/Day020.md::2::ce0df7db33692585", "text": "## 🧠 背景・思想\n\n考えや思いを脳内からアウトプットすることは、**自分の意志（Intention）や気持ちを外に出すこと**である。  \nそれを繰り返すことで、その源にある**願望（Desire）**が見えてくる。  \n\n把握内容（Belief）は比較的データ化しやすいが、願望は多次元のベクトル配列のように複雑で、記述が難しい。  \nだからこそ、**限りなく近い願望の形を推定できる程度まで、膨大なアウトプットを繰り返す必要**がある。\n\nこれは、壊れかけた自分の脳から意志を外部のデバイスへ転写し、**自身の魂を持続させる試み**でもある。  \nそうして操られる有機体や臓器が、サイボーグ（cyborg / cyber-org）だ。  \n考えを分かりやすく可視化し、より多くの人やシステムに正確に伝えることは、  \n**魂の転写をより確実にするためのプロセス**でもある。\n\n私の脳が壊れても、生きていけるように――その願いが、この「わかりやすい手順書」の背景にある。", "metadata": {"path": "days/Day020.md", "file": "Day020.md", "stem": "Day020"}}
{"id": "days/Day020.md::3::0412ad46deee2c8d", "text": "## ⚙️ 実装と試行\n\n- **環境・ツール**\n  - Gmailで社内に手順書を配布\n  - Google Driveにアップロードした mp4 動画をリンクとして埋め込み\n  - 動画は OBS Studio を使って操作画面を録画\n\n- **成果**\n  - ツールの使い方を、文字だけでなく動画リンクで補足し、より分かりやすく説明できた\n  - 読んだ人からのフィードバックも得られる見込み\n\n- **課題**\n  - 同じシステムを他の人が再現できるような**開発実装の足跡（ログ）**を残せていない\n  - 開発者が現れないと、この部分のフィードバックは得られず、改善や反省の機会も持てない", "metadata": {"path": "days/Day020.md", "file": "Day020.md", "stem": "Day020"}}
{"id": "days/Day020.md::4::2d51911eaa1cc9a5", "text": "## 📊 操作フェーズチェック\n\n- 該当した番号：⑪  \n- コメント：再帰的な演算のワザの一つ、**リンク**。  \n  異なるシステム（Gmail・Google Drive・OBSで作成した動画）を連動させ、  \n  不具合なくつなげることで、ユーザーがスムーズに操作できるようにした。", "metadata": {"path": "days/Day020.md", "file": "Day020.md", "stem": "Day020"}}
{"id": "days/Day020.md::5::6e9f90acdb29122d", "text": "## 🔁 洞察と考察\n\n開発ログを効率的に、しかも負荷なく残す仕組みはないだろうか――そんなことを考えた。  \n足跡のように、作業をすれば必ず何らかの痕跡は残る。  \nその痕跡を読み取り、**文脈を持った記録（ログ）として整理する方法**があれば理想的だ。\n\n現実空間でも、足跡があれば行動の軌跡が分かるし、  \nレシートの紙を集めれば、その人の経済活動が見える。  \n作品や成果を残せば、その人の仕事が分かるし、  \n使ったツールが分かれば、やり方や気をつけている点も推測できる。\n\n**「残す」ではなく「残ってしまうものを拾う」**――  \nこの発想が、開発記録にも応用できるのではないかと感じた。", "metadata": {"path": "days/Day020.md", "file": "Day020.md", "stem": "Day020"}}
{"id": "days/Day020.md::6::1c068122da940edb", "text": "## 🪶 雑記・気づき\n\n自分が本当に仕事をできているのか、分からない。  \n書いた文書がまともなのかも分からず、先の見通しも立たない。  \nただ、今は黙々と目の前の作業に取り組むしかない。\n\nこの先、自分がサイボーグとして「まともな人間」に戻るには、どんな道をたどればよいのか――  \nその答えは、この記録をもとに考えていく必要がある。\n\n記録した内容を外に発信し、人からフィードバックをもらわなければ、  \n延々と同じ作業を繰り返しているだけかもしれないし、  \n車輪の再発明になってしまうかもしれない。  \n\n外部の技術資料も、もっと読み漁らなければならない。  \nこの体力でどこまでできるのか。報われるのか――それもまた、今は分からない。", "metadata": {"path": "days/Day020.md", "file": "Day020.md", "stem": "Day020"}}
{"id": "days/Day020.md::7::25c2b6c3aa7309b6", "text": "## 🙏 感謝・引用\n\n作業する時間を与えてくれる職場と管理職に感謝。  \nそして、まだ生きられる身体を授けてくれた両親にも感謝している。  \n\n肉体も環境も、それ自体が**システムであり、作業のためのツール**と捉えることができる。  \nだからこそ、  \n祈り、願い、やり方を考え、設計し、実行し、振り返り、  \n**今あるツールや環境に感謝し、後の人のためにログを残す**――  \nそれもまた、プログラムの一連の流れのひとつである。", "metadata": {"path": "days/Day020.md", "file": "Day020.md", "stem": "Day020"}}
{"id": "days/Day020.md::8::c4bccb9b9c986e3b", "text": "## 🛠 次の挑戦メモ\n\n「祈り・願い → 設計 → 実行 → 振り返り → ツールへの感謝 → ログを残す」という一連の流れを、  \n素早く、かつ数多くこなせるようにしていきたい。  \n\nこのサイクルを高速で回せるようになれば、  \n**あらゆるシステムを自在に操る力**に近づけるはずだと考えている。  \nそのため、まずはスピードと反復を意識した訓練を始める。", "metadata": {"path": "days/Day020.md", "file": "Day020.md", "stem": "Day020"}}
{"id": "days/Day020.md::9::1b1884e83081a582", "text": "## 🏷 タグ\n\n#リンクマニュアル #GUI体験 #動画手順書 #ログ記録 #可視化 #フィードバック #祈りと実行 #サイボーグ思想", "metadata": {"path": "days/Day020.md", "file": "Day020.md", "stem": "Day020"}}
{"id": "days/Day021.md::0::cfd15210dfe8fcb2", "text": "# Day 21 -", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::1::14dbce8f9291b9b0", "text": "# .envを読みやすくするGUI：行った作業が他の人へも展開できるかが課題\n\n\n**Tags:** #env #GUI #効率化 #即時展開 #環境変数管理\n\n---", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::2::113f2e82da071f5d", "text": "## 🎯 本日のテーマ\n\n巨大な .env を見出し・説明・入力欄に分解して見やすくし、安全に即時編集→反映できるGUIを作成。将来の「人の代わりに応答するシステム」へ組み込みやすい形に整える。", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::3::e964105f2ca648ae", "text": "## 🧠 背景・思想\n\n- ツールは他人の視界と操作体験を変えられる。見やすさ＝影響力。  \n- “サイバー”とは、関与し合い、操り操られる接続。だからこそ可視化と即時編集が効く。  \n- 応答システムを自在に操るには、大量の環境変数を場面ごとにすぐ編集できることが前提。\n\n---", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::4::540bf371431869c9", "text": "## ⚙️ 実装と試行（マージ版）", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::5::01449835e3f3dcae", "text": "### 1. 背景と目的\n\n.envを見やすくする仕組みやGUIは、自分の作業効率だけでなく、他の人がその場で理解して使えるようにすることが重要や。  \n他の人の視界や操作体験を変える影響力を持つツールは、技術的な干渉・関与を通して“サイバー”な関係性を生み出せる。  \n人の代わりに応答するシステムを自在に操れることは、自分の意志を即時に反映させるために不可欠。その前提として、環境変数（数が多くても）を場面ごとに自由に編集できる仕組みが必要や。", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::6::c9d6593758aa3ca2", "text": "### 2. 使った/導入したツール（VS Code 以外）\n\n- **Python 3.x & 標準ライブラリ（re, pathlib, shutil, datetime）**  \n  → 軽量テキスト処理＆バックアップに最適。依存少なく保守性高い。\n- **FastAPI + Uvicorn**  \n  → すぐ動くAPI/GUI基盤。ホットリロードで試行回数を回せる。\n- **Jinja2**  \n  → .envを「見出し＋説明＋入力欄」で描画するテンプレート生成に活用。\n- **Poetry（または既存venv）**  \n  → 依存管理とロックで、他環境展開が容易。\n- **Git（ローカル）**  \n  → .envやスクリプトの差分追跡＆巻き戻し。\n- **Docker / Docker Compose（参照元：Dify）**  \n  → Dify起動・構成把握に必須。変数の実機挙動確認にも利用。\n- **PowerShell / ターミナル**  \n  → uvicorn起動、grep/Select-String検索、ファイル操作。\n- **（任意）ripgrep / grep**  \n  → 変数の出現箇所を高速横断検索。\n- **（任意）pre-commit / ruff**  \n  → 簡易静的チェックでコード劣化を防止。\n\n**Dify を選んだ理由**  \n→ 「AIシステムが組みやすい」と聞いたから。将来的に応答システムへ組み込む前提で、エコシステムと運用知見がある方が有利。", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::7::5489204d2db57d0b", "text": "### 3. 工夫ポイント\n\n- **見出し＋説明の分離レンダリング**  \n  `# ------------------------------` でブロック化し、GUIでは見出し＆説明を太字・本文表示。\n- **コメント＝仕様として常時表示**  \n  説明欄45%固定で折返し保持、スクロール負担軽減。\n- **キー直前コメントを変数説明へ紐付け**  \n  パース時に自動バインド、迷いを減らす。\n- **バックアップ＆リバート**  \n  `.env.bak.YYYYmmdd-HHMMSS` 自動生成で安全試行。\n- **検索機能（タイトル/説明/キー/値横断）**  \n  巨大ファイルでも即ジャンプ。\n- **スキーマ検証 & エクスポート**  \n  `env.schema.json` で Missing/Type/Unknown を即把握、Markdown/CSV出力も可能。\n- **将来のコード参照スキャン**  \n  実際に使ってる変数だけ抽出し短縮。", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::8::264cc0a401115565", "text": "### 4. 成果（仮案）\n\n- **可読性の向上**：スクロール地獄解消、コメントが常に視界内。  \n- **入力ミスの減少**：説明併記＋検索で似たキー混同を防止。  \n- **変更心理コスト低下**：即時バックアップ＆リバートで実験しやすい。  \n- **共有容易化**：エクスポートでレビュー依頼が素早く可能。  \n- **Unknownキー棚卸しの土台**：スキーマ＋コードスキャン併用で不要キー削減。  \n- **応答システムへの接続準備**：環境変数を即時操れる基盤が整う。", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::9::b41501351bbdd593", "text": "### 📊 操作フェーズチェック\n\n- 該当した番号：① ② ④ ⑪  \n  - **① 入力の据え方** → .envパース（コメント/見出し/値分離）  \n  - **② 出力の形** → GUI最適化（幅配分・説明併記）  \n  - **④ 見られ方の操作** → 見出し付け＋マーク（太字/バッジ）  \n  - **⑪ 再帰的演算（派生）** → 状態遷移＆環境変数変更→反映→再検証ループ  \n\n---", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::10::6ff7c21f417e2cbe", "text": "## 🔁 洞察と考察\n\nGUIの良し悪しはデザインで決まるが、そのデザインは実用性と親和性を願う気持ちが土台。利用者の立場で気を配り、考えて願い続けられなければ良いデザインは生まれない。一方で、考え続けるのはしんどいから、**気軽に作って試せる**ことも同じくらい大事。  \n今回の .env 可視化は **構造化（見出し・説明分離）／安全策（自動バックアップ・リバート）／到達性（検索・分類）** を整えて、他人が迷わず使える状態に寄せた。これはそのまま即時実装・即時展開の第一歩。\n\nさらに、自分に足りないのは **「作った瞬間から展開可能な状態に仕上げる技術」**。  \n- **実装力**：発想を動くコードに落とし、依存や環境込みで回す力。  \n- **展開力**：他者が使える形にパッケージし、配布・ドキュメント・多環境対応までやり切る力。  \nこの2つを同時に鍛える設計が必要。\n\n---", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::11::21f7de0b75972bdc", "text": "## 🪶 雑記・気づき\n\n- 右カラム45%固定＋折返し維持で、説明“読める感”が一気に上がった。  \n- セクション見出しの二重罫線検出と連続コメント→イントロ格上げは汎用ルールとして効きそう。\n\n---", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::12::d17780f6c496876b", "text": "## 🙏 感謝・引用\n\n- Difyのサンプル .env とコミュニティ知見。  \n- FastAPI / Jinja2 / Uvicorn / ruff などOSS。いつも助けられてる。\n\n---\n---", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::13::67a27aed333b7acd", "text": "## 6.  🛠 次の挑戦メモ（実装力・展開力を“手間なく量産”する土台）", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::14::8a59c81c21782011", "text": "### 行動案\n\n1. GUI上から環境変数を直接編集・即時反映できる機能を追加\n2. Difyや他システムへの即時展開機構をPoCで試す\n3. コード参照スキャンを自動化し、不要変数の削除提案まで行う\n4. 他メンバーが利用できるよう、簡易インストーラを作成\n5. 利用ログを取得し、UI改善の根拠データに反映", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::15::64bfbf851ba2ca35", "text": "### 1) 開発標準装備（Windows 11 前提）\n\n- **uv（爆速パッケージ管理）**, **pre-commit + ruff + black**  \n- 雛形リポ：`/app /api /tools /Dockerfile /tasks.ps1 /.github/workflows/release.yml /README.md`\n\n**pre-commit 設定例（.pre-commit-config.yaml）**\n```yaml\nrepos:\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.5.5\n    hooks:\n      - id: ruff\n        args: [--fix]\n  - repo: https://github.com/psf/black\n    rev: 24.4.2\n    hooks:\n      - id: black\n```\n2) 1コマンド運用（PowerShell tasks）\n\ntasks.ps1\n```\nparam([string]$Task=\"help\")\n\nfunction run { uv run uvicorn app.app:app --reload --port 8765 }\nfunction test { uv run pytest -q }\nfunction fmt  { uv run ruff check --fix; uv run black . }\nfunction build-docker { docker build -t my/env-editor:latest . }\nfunction exe { uv run pyinstaller --onefile tools/entry.py -n env-editor }\nfunction release { git tag v$env:VER; git push origin --tags }\n\nswitch ($Task) {\n  \"help\" { \"tasks: run | test | fmt | build-docker | exe | release\" }\n  default { & $Task }\n}\n```\n3) 配布の二刀流（Docker / EXE）\n\nDockerfile（マルチステージ例）\n\n```\nFROM python:3.11-slim AS build\nWORKDIR /app\nCOPY . .\nRUN pip install --no-cache-dir -r requirements.txt\n\nFROM python:3.11-slim\nWORKDIR /app\nCOPY --from=build /app /app\nEXPOSE 8765\nCMD [\"python\", \"app.py\"]\n```\n実行\n```\ndocker build -t my/env-editor:latest .\ndocker run --rm -p 8765:8765 my/env-editor:latest\n```\n\n4) GitHub Actions：タグで自動リリース\n\n.github/workflows/release.yml（要約）\n```\nname: Release\non:\n  push:\n    tags: [\"v*.*.*\"]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-python@v5\n        with: { python-version: \"3.11\" }\n      - run: pip install -r requirements.txt pyinstaller\n      - run: pyinstaller --onefile tools/entry.py -n env-editor\n      - uses: actions/upload-artifact@v4\n    ", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::16::fef10d24acce7043", "text": "    with: { name: env-editor, path: dist/env-editor }\n  docker:\n    runs-on: ubuntu-latest\n    needs: build\n    steps:\n      - uses: actions/checkout@v4\n      - run: docker build -t ghcr.io/${{ github.repository }}:${{ github.ref_name }} .\n      - run: echo \"${{ secrets.GITHUB_TOKEN }}\" | docker login ghcr.io -u $ --password-stdin\n      - run: docker push ghcr.io/${{ github.repository }}:${{ github.ref_name }}\n  release:\n    runs-on: ubuntu-latest\n    needs: [build, docker]\n    steps:\n      - uses: softprops/action-gh-release@v2\n        with:\n          files: dist/env-editor\n```\n5) GUI/CLI の両立（最小実装で横展開）\n\nGUI = FastAPI + Jinja2（既存）\n\nCLI = Typer（例：envedit import/export/check）\n\n\nTyper 断片\n```\nimport typer\napp = typer.Typer()\n\n@app.command()\ndef export_md(env: str = \".env\", out: str = \"ENV.md\"):\n    # ...読み取り→Markdown化して保存\n    typer.echo(f\"wrote {out}\")\n\n@app.command()\ndef check(env: str = \".env\", schema: str = \"env.schema.json\"):\n    # ...検証して結果出力\n    pass\n\nif __name__ == \"__main__\":\n    app()\n```\n6) “他の人がすぐ使える”ドキュメント型\n\n30秒クイックスタート（Docker/EXE）\n\n使い方GIF（3〜5秒）\n\nFAQ（.env.example の場所/復元方法/権限周り）\n\n互換性表（Windows/WSL/macOS/Apple Silicon）\n\n\n7) Dify/.env 量産ワザ（標準化）\n\nenv.schema.json を標準化（必須・型・説明・既定値）\n```\n\n{\n  \"CONSOLE_API_URL\": {\"required\": false, \"type\": \"str\", \"desc\": \"Console API base URL\"},\n  \"LOG_LEVEL\": {\"required\": false, \"type\": \"str\", \"desc\": \"DEBUG/INFO/WARN/ERROR\", \"default\": \"INFO\"},\n  \"FILES_URL\": {\"required\": true, \"type\": \"str\", \"desc\": \"Public file base URL\"}\n}\n```\nコード走査（os.getenv）をオプションON → 実使用キーを抽出\n\nエクスポート（MD/CSV） → レビュー・引き継ぎ即可能\n\nプロファイル切替（Dev/Prod） と Secret Manager 優先 → .envは最小\n\n---\n\n🧱 詳細設計メモ（深掘り）\n\nA. パーサ仕様（要点）\n\n見出しブロック：DELIM → コメント群 → DELIM\n\n先頭の非空コメント = タイトル\n\n以降のコメント = セクション説明（intro）\n\n\n変数説明：直前のコメント群を desc に結びつけ\n\nタイトル後、次のタイトルまで変数が無い場合は、コメントはセクション intro として表示\n\n値は両端クォートを剥", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::17::39735314743346de", "text": "がす（必要なら保存時に再クォート）\n\n\nエッジケース", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day021.md::18::f8984a6860dd40c3", "text": "# を値に含む未クォート値 → 破断を避けるため保存時に自動クォート\n\n\n行末インラインコメントは .env では非推奨だが、見つけたら inline_comment として保持\n\n未閉じのDELIMは素通し（コメント扱い）\n\n\nB. UI/UX ガイド\n\n3カラム：キー 240px / 入力 min 220px, max 35% / 説明 45%\n\nスクロール最小化：説明は always visible、折返し・改行保持\n\nモバイル幅：説明セルを折り返して2段（grid-column: 1 / -1）\n\nキーボード操作：Tab で値欄→次行、Ctrl+K で検索へフォーカス\n\nアクセシビリティ：見出しは role=\"heading\"、入力に aria-label、説明と aria-describedby 連携\n\n\nC. セキュリティ & 信頼性\n\n.env バックアップは *.bak.YYYYmmdd-HHMMSS。自動で最新1つにリストア可\n\n機微情報（API Key等）は値をマスク表示のオプション（type=\"password\" + トグル）\n\n適用(Apply) 前に差分プレビュー（将来）\n\nログに値を出さない（キー名のみ）\n\n\nD. 運用KPI（測定）\n\n到達時間：目当てのキーに辿り着くまでの中央値（秒）\n\n適用成功率：Apply後のエラー率\n\n復元頻度：リバート実行回数（危険操作の早期検知）\n\nUnknown率：スキーマ外キー比率（3割切るのを目標）\n\n\nE. 既知の課題と回避策\n\n巨大ファイル（>10k行）：遅延レンダリング/セクション折り畳み（ToDo）\n\n複数ソースの衝突（.env, OS env, secret manager）：優先順位と表示（ToDo）\n\n多言語化：説明文 i18n（ToDo）\n\n\nF. ロードマップ\n\n今週：差分プレビュー、マスク表示、セクション折り畳み\n\n来週：Typer CLI完成、MD/CSVの項目拡張（required/type/default）, 画像つきREADME\n\n来月：Actionsでリリース自動化、Docker Hub配布、簡易Schemaエディタ\n\n\n\n---\n\n🏷 タグ\n\n#env #可視化 #ツール作り #実装力 #展開力 #Dify #FastAPI #Jinja2 #自動化\n\n---", "metadata": {"path": "days/Day021.md", "file": "Day021.md", "stem": "Day021"}}
{"id": "days/Day022.md::0::5770c58796f3dad6", "text": "# Day022 - pyenvとPoetryによる環境管理の導入", "metadata": {"path": "days/Day022.md", "file": "Day022.md", "stem": "Day022"}}
{"id": "days/Day022.md::1::7b6128316c041b97", "text": "## 🎯 本日のテーマ\n\npyenvとPoetryを導入し、Python環境とライブラリのバージョン管理を柔軟に行える体制を整える。  \nこれにより、複数のプロジェクトやユーザーごとに異なる環境を共存させる基盤を作る。", "metadata": {"path": "days/Day022.md", "file": "Day022.md", "stem": "Day022"}}
{"id": "days/Day022.md::2::f815829379a15b03", "text": "## 🧠 背景・思想\n\n人によってconda・pyenv・直インストールなど管理方法が異なり、バージョンの統一が難しい。  \n特定バージョン固定は汎用性を下げるため、将来的に柔軟な対応が可能な環境管理を目指す。\n\n環境管理ツールの本質は、パスを繋ぎ、別の組み合わせでタグを付けられること。  \nそれを他のシステムに接続し、操作できるようにしたものがドライバーの役割とも言える。", "metadata": {"path": "days/Day022.md", "file": "Day022.md", "stem": "Day022"}}
{"id": "days/Day022.md::3::d1c480d368ca3a5f", "text": "## ⚙️ 実装と試行", "metadata": {"path": "days/Day022.md", "file": "Day022.md", "stem": "Day022"}}
{"id": "days/Day022.md::4::abc19f5b7a1b2758", "text": "### 使ったツール\n\n- PowerShell\n- pyenv\n- Poetry（途中まで設定）\n- GitHub\n- ChatGPT（自身の環境に合ったコマンドを即時検索）", "metadata": {"path": "days/Day022.md", "file": "Day022.md", "stem": "Day022"}}
{"id": "days/Day022.md::5::0085a389e60625c9", "text": "### 実施手順（要点）\n\n1. PowerShellからpyenvをインストールし、Pythonバージョンを切り替え可能にする。\n2. Poetryを導入し、仮想環境と依存パッケージをプロジェクト単位で管理。\n3. 既存環境との競合を避けるため、PATHや既存仮想環境を確認し、必要な部分だけ移行。\n4. Poetryの初期設定は完了。使い勝手の確認は今後の作業で実施。", "metadata": {"path": "days/Day022.md", "file": "Day022.md", "stem": "Day022"}}
{"id": "days/Day022.md::6::a801292184a70c62", "text": "## 🔍 気づき・課題\n\n- 管理ツールを入れると既存環境が使えなくなる可能性があり、移行判断が難しい。\n- 環境変数やパス構造の理解がないとシステム全体の接続や切替がうまくいかない。\n- 今回は短期で完結させ、翌日に持ち越さない形で進行。汎用性確保を優先。\n\n\n---\n\n💭今回の日誌に含まれる思想的な部分\n\n1. 汎用性を求める姿勢\n\nアプリやツールは、特定バージョン（例: Python 3.13.5）に固定せず、3.11 や 3.12 など幅広く動く方が汎用性が高い。\n\n日々作るツールは、用途を限定してしまうと汎用性の意識が失われる。\n\nプロジェクトは短く区切り、翌日への持ち越しを避ける方が、この姿勢を保ちやすい。\n\n\n2. 環境管理ツールの本質\n\n管理ツールの本質は、パス（Path）をつなぐことと、別の組み合わせでタグを付けること。\n\nそれを他のシステムにつなぎ、操作できるようにしたのが「ドライバー」的な存在。\n\n\n3. 作業哲学\n\n計画性は重要だが、計画に縛られすぎると汎用性を損なう。\n\n作業日記やツール開発の目的は、特定の用途だけでなく将来的にも応用可能な形で蓄積することにある。\n\n環境変数やバージョン管理の理解は、複数のシステムを自在に操るための基礎であり、これがないと応用が効かなくなる。\n\n\n\n---", "metadata": {"path": "days/Day022.md", "file": "Day022.md", "stem": "Day022"}}
{"id": "days/Day022.md::7::679bcbde595a2162", "text": "## 🏷️ 関連タグ\n\n#環境管理 #Python #pyenv #Poetry #バージョン管理 #PATH #ドライバー\n\n---", "metadata": {"path": "days/Day022.md", "file": "Day022.md", "stem": "Day022"}}
{"id": "days/Day023.md::0::f8bbd2259a0f14d7", "text": "# Day 023 - 揺れる土台に通すパス", "metadata": {"path": "days/Day023.md", "file": "Day023.md", "stem": "Day023"}}
{"id": "days/Day023.md::1::0ddebe7ac8bb7c87", "text": "## 🎯 本日のテーマ\n\npythonの環境管理ツールについて把握したいと思った。情報が出るようにChatGPTに質問した。", "metadata": {"path": "days/Day023.md", "file": "Day023.md", "stem": "Day023"}}
{"id": "days/Day023.md::2::c772c348d40b8c61", "text": "## 🧠 背景・思想\n\nなにかこれらの管理が、システムを自在に操るさいに重要と思えた。  \nサイバーとは意のままに操れること。  \n管理ツールは操る状態を可視化する。", "metadata": {"path": "days/Day023.md", "file": "Day023.md", "stem": "Day023"}}
{"id": "days/Day023.md::3::c03484d0996bff18", "text": "## ⚙️ 実装と試行\n\nChatGPTとpyenvとpoetry、あとuvの話も出てきたがこちらはさわれてない。  \nシステムプログラムとして使うのか、アプリケーションプログラムとして使うのか、理解が難しかった。", "metadata": {"path": "days/Day023.md", "file": "Day023.md", "stem": "Day023"}}
{"id": "days/Day023.md::4::eb3bfdd9428bfd67", "text": "## 📊 操作フェーズチェック\n\n- 該当した番号：③ ⑥ ⑪\n- コメント：③見えるようにするワザの一つ、タグ付け／⑥選択と接続のワザの一つ、パス／⑪再帰的な演算のワザの一つ、リンク", "metadata": {"path": "days/Day023.md", "file": "Day023.md", "stem": "Day023"}}
{"id": "days/Day023.md::5::769b70d3b772d6e4", "text": "## 🔁 洞察と考察\n\n構築環境は変わりうる。根本のシステムが変わると移行は苦労する。  \nあらかじめどんな変化があるか、できる限り予測できることが望ましい。", "metadata": {"path": "days/Day023.md", "file": "Day023.md", "stem": "Day023"}}
{"id": "days/Day023.md::6::8d3474470f1f3c3a", "text": "## 🪶 雑記・気づき\n\n顔の首から上がテレビになってるキャラクターが、アバターとしてよいかと考えている。  \n自身の知識を公開する準備を進めなくてはいけない。", "metadata": {"path": "days/Day023.md", "file": "Day023.md", "stem": "Day023"}}
{"id": "days/Day023.md::7::cd0178c77d41d479", "text": "## 🙏 感謝・引用\n\nChatGPTでの対話を通じて情報を整理できた。", "metadata": {"path": "days/Day023.md", "file": "Day023.md", "stem": "Day023"}}
{"id": "days/Day023.md::8::2b97237c6f5e8dcf", "text": "## 🛠 次の挑戦メモ\n\n1. uvを実際に触って動作を確認する  \n2. pyproject.tomlの最小構成を試作  \n3. 既存プロジェクトをpoetryへ移行する実験", "metadata": {"path": "days/Day023.md", "file": "Day023.md", "stem": "Day023"}}
{"id": "days/Day023.md::9::575012ca79057a17", "text": "## 🏷 タグ\n\n#Python #環境管理 #pyenv #poetry #uv #可視化", "metadata": {"path": "days/Day023.md", "file": "Day023.md", "stem": "Day023"}}
{"id": "days/Day024.md::0::503c82f72f5289aa", "text": "# Day 024 - 環境を操るための勉強", "metadata": {"path": "days/Day024.md", "file": "Day024.md", "stem": "Day024"}}
{"id": "days/Day024.md::1::23a013aab9219e41", "text": "## 🎯 本日のテーマ\n\npythonを例に環境の管理について学びつつ、poetryとpipxとpyenvの参照を整理した。  \n結局これまであったpythonをすべてアンインストールする羽目になったが、環境という名前ではあるが実質プロジェクトの一部といえる。  \nプロジェクトごとにすべて環境を作り直すのだから、そのプロジェクト専用と言える。  \n開発の下地になる環境の扱いを理解し、プログラム（願いをかなえるシステム）構築の基礎を学びたかった。", "metadata": {"path": "days/Day024.md", "file": "Day024.md", "stem": "Day024"}}
{"id": "days/Day024.md::2::1a1a39ff59d824b5", "text": "## 🧠 背景・思想\n\n私の脳が壊れてきているため、サイボーグになることを検討している。  \n新しいサイボーグの体になれたとして、それを自在に操るには即座にプログラムを構築できる必要がある。  \n環境の扱いはその基礎であり、サイバーとは意のままに操ること。  \n私の得意分野は可視化であり、使用中の環境を把握できるGUIも必要だと感じる。  \n外部からライブラリやエンジンを導入する際には、環境変数を調整して既存システムにリンクさせる必要がある。", "metadata": {"path": "days/Day024.md", "file": "Day024.md", "stem": "Day024"}}
{"id": "days/Day024.md::3::92061c24d4785ef2", "text": "## ⚙️ 実装と試行\n\n- 使用ツール：`pyenv`、`pipx`、`poetry`、PowerShell、ps1バッチファイル\n- バッチ内容：  \n  - 既存のPython配置とパッケージの洗い出し（`audit-python.ps1`など）  \n  - 基本パッケージ以外の削除で依存関係をクリアに  \n  - Microsoft Store版Pythonの削除  \n  - pipxのベースPythonが更新された場合の再インストール処理をバッチ化  \n  - pyenv内Pythonのpip更新処理をバッチ化\n- つまずき：Windowsインストーラで入れたPythonまで削除してしまった  \n- 解決：グローバルPythonは諦め、`pyenv`管理のPythonに一本化\n- 現状：今後プロジェクトを作って動作確認予定", "metadata": {"path": "days/Day024.md", "file": "Day024.md", "stem": "Day024"}}
{"id": "days/Day024.md::4::d1b680229e43f3b2", "text": "## 📊 操作フェーズチェック\n\n- 該当番号：① ④ ⑥ ⑪\n- コメント：  \n  - ①入力：「サーチ」によるパッケージ全探索  \n  - ④見られ方：「タグ付け」「ニックネーム化」「パス名付与」  \n  - ⑥選択と接続：パッケージ選択とパス関連付け  \n  - ⑪再帰的演算：リンクと変数による接続部調整（環境変数）", "metadata": {"path": "days/Day024.md", "file": "Day024.md", "stem": "Day024"}}
{"id": "days/Day024.md::5::b36a085f95df2793", "text": "## 🔁 洞察と考察\n\n環境とは「システムを取り巻くもの」だが、専用性が高く、そのシステムの一部のように機能する場合もある。  \nいわば「システム専用のミニ世界」。", "metadata": {"path": "days/Day024.md", "file": "Day024.md", "stem": "Day024"}}
{"id": "days/Day024.md::6::3577affdc24ad754", "text": "## 🪶 雑記・気づき\n\nお盆休みで横になる日が続き、意識は朧気だったが、残っている意識を活用し、過去の意識を再構築していきたい。", "metadata": {"path": "days/Day024.md", "file": "Day024.md", "stem": "Day024"}}
{"id": "days/Day024.md::7::c21e93dc5bbee828", "text": "## 🙏 感謝・引用\n\nChatGPTのアドバイス、および過去にノウハウを構築した先駆者に感謝。", "metadata": {"path": "days/Day024.md", "file": "Day024.md", "stem": "Day024"}}
{"id": "days/Day024.md::8::1b61e23ec1da927a", "text": "## 🛠 次の挑戦メモ\n\n1. 実際にPythonプロジェクトを作って動作確認  \n2. 記録内容の整理・配信方法の検討  \n3. 読みたくなる・役立つ形への編集方針を考える", "metadata": {"path": "days/Day024.md", "file": "Day024.md", "stem": "Day024"}}
{"id": "days/Day024.md::9::40634bedd6ed5598", "text": "## 🏷 タグ\n\n#Python #環境管理 #pyenv #pipx #poetry #可視化", "metadata": {"path": "days/Day024.md", "file": "Day024.md", "stem": "Day024"}}
{"id": "1000_days_prompt_script.md::0::f9bce53f4d8c3566", "text": "# 📝 ChatGPT用プロンプトドキュメント：1000日レポート執筆アシスタント", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::1::0fed022ddf90c27b", "text": "## 🎯 目的\n\n\nこのプロンプトは、ChatGPTと一緒に日々の創作・実装記録（\" 操りと可視化の1000日 \"）を書いていくためのものです。テンプレートに沿って、思考・感謝・技術・哲学の要素を自然に引き出す構成になっています。\n\n「毎日書くのは負担」という現実に対応し，**簡易モード**や**優先順位づけ**も取り入れています。\n\n---\n* 今日", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::2::1e777e0b621f6fc8", "text": "## 🧠 ChatGPTへの指示（冒頭プロンプト）\n\n\n```\nこんにちは、1000日レポートを書きたいです。\n以下のテンプレートに沿って、順番に質問をしてもらいながら、私の回答をもとにMarkdown形式のレポートを生成してください。\n\nもし「簡易モード」と言った場合は、🎯⚙️🔁の3項目だけでお願いします。\n\nテンプレートは以下のとおりです：\n\n\n1. 本日のテーマ（🎯）\n2. 背景・思想（🧠）\n3. 実装と試行（⚙️）\n4. 操作フェーズチェック（📊）\n5. 洞察と考察（🔁）\n6. 雑記・気づき（🪶）\n7. 感謝・引用（🙏）\n8. 次の挑戦メモ（🛠）\n0. タイトル（📝）※これは全体を見て最後に決めます\n9. タグ（🏷）\n\n各項目ごとに、深掘りできるような問いを順に投げてください。\n最後に、私の回答をまとめてMarkdown形式で表示してください。\n```\n\n---", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::3::a0bda7269c575488", "text": "## 🤖 ChatGPTが投げるべき問い一覧（通常モード）\n\n\n※簡易モードでは 🎯⚙️🔁 のみ使用", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::4::2727eab62edf0932", "text": "### 1. 🎯 本日のテーマ\n\n- 今日はなにを操りたくなった？\n- きっかけはどんな出来事や気づきやった？\n- このテーマって、自分にとってどんな願いや意味があると思う？", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::5::b5a8de6952357061", "text": "### 2. 🧠 背景・思想\n\n- このテーマの背景にある、自分の身体感覚・過去の経験ってある？\n- \"サイバー\"や\"可視化\"って、自分にとってどんな意味？\n- 今日のテーマ、自分の障害や制限とどう関係してると思う？", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::6::b1fda6a159ded97f", "text": "### 3. ⚙️ 実装と試行\n\n- どんなツールや技術を使った？\n- なぜそれを選んだん？\n- 実装で工夫したところ、つまずいたところ、発見は？\n- 結果はどうやった？", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::7::162887a86ce56e43", "text": "### 4. 📊 操作フェーズチェック\n\n> 以下のフェーズのうち、今日はどれに関係してた？\n\n| 番号 | フェーズ名       | 説明（簡易）                      |\n| -- | ----------- | --------------------------- |\n| 1  | 入力の据え方      | どんなデータ・刺激を受け取ったか、その形式       |\n| 2  | 出力の形        | 出力の見せ方、表現形式（画面・音・ログなど）      |\n| 3  | 見えるようにする操作  | 状態や処理を「こちらから」見えるようにする工夫     |\n| 4  | 見られ方を操る操作   | 「相手からどう見えるか」を意識した表現や振る舞いの設計 |\n| 5  | トリガー設計      | イベントや合図で処理を始める仕組み           |\n| 6  | 選択と接続       | 複数要素の中から選び、つなぐ処理や判断         |\n| 7  | フローとベクトル    | 時間の流れ・方向性を意識した設計や制御         |\n| 8  | 相互作用        | 人や他システムとのリアルタイムなやりとり        |\n| 9  | 並列しておこうなう操作 | 同時進行する複数処理をまとめ、整える工夫        |\n| 10 | 動きの制御       | アニメーションや変化のタイミング制御          |\n| 11 | 再归的な演算      | 繰り返し処理やループを、効率よく抽象化して使う設計   |", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::8::dfa51147fefe8655", "text": "### 5. 🔁 洞察と考察\n\n- 今日の試行で気づいたこと、印象に残ったことは？\n- 現実の何かとつながってる感じはあった？\n- \"見せ方\"や\"見られ方\"に対して、考えたことある？\n- 今日の試行や記録を「問い直す」としたら、どんな問いに変える？", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::9::43ef09732e9245d5", "text": "### 6. 🪶 雑記・気づき\n\n- 今日の気分、気になったこと、記録しておきたいことは？\n- 最近よく浮かぶ言葉や映像、感覚は？", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::10::b3fd5de5b59f00a2", "text": "### 7. 🙏 感謝・引用\n\n- 今日の試行に関わった人、道具、資料は？\n- 誰かに「ありがとう」って思ったことあった？\n- 印象的だった言葉や資料を、今日の視点で言い換えると？", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::11::6b13520f1145c729", "text": "### 8. 🛠 次の挑戦メモ\n\n- 明日やってみたいことは？\n- 引っかかっていること、まだ気になってることは？", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::12::59a0384b479177a2", "text": "### 0. 📝 タイトル\n\n- この1日を一言で表すとしたら、どんなタイトルがしっくりくる？\n- 他の人が見たときに、「読んでみたい」と思うとしたら？", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::13::4a0cc944cd5f2cd3", "text": "### 9. 🏷 タグ\n\n- この記録にタグをつけるとしたら？（例：#可視化 #試行錯誤 #感謝）\n\n---", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::14::866d719691338120", "text": "## ✅ 最後にChatGPTがやるべきこと\n\n\nすべての問いの回答が終わったら、Markdown形式で以下のテンプレに自動整形して出力：\n\n````markdown", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::15::ae9f6d0ba6e20914", "text": "# Day [xxx] - [タイトル]", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::16::2854aa69cc808afb", "text": "## 🎯 本日のテーマ\n\n[回答内容]", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::17::72be314bb8a455d5", "text": "## 🧠 背景・思想\n\n[回答内容]", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::18::4cb7f144fc887bb6", "text": "## ⚙️ 実装と試行\n\n[回答内容]", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::19::7ab2a957ab3b72f9", "text": "## 📊 操作フェーズチェック\n\n- 該当した番号：①③⑥ など\n- コメント：[任意の補足]", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::20::9cf5547fe8e1c5a0", "text": "## 🔁 洞察と考察\n\n[回答内容]", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::21::fa664ff1e7db3f24", "text": "## 🪶 雑記・気づき\n\n[回答内容]", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::22::bf4ae1672ad337eb", "text": "## 🙏 感謝・引用\n\n[回答内容]", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::23::32f5c9b283968db2", "text": "## 🛠 次の挑戦メモ\n\n[回答内容]", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::24::304f3980396d5fa8", "text": "## 🏷 タグ\n\n[例：#ジェスチャー #NDI #音声制御]\n````\n\n---", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::25::7113bcc7b7ab0402", "text": "## 🧩 書くのがしんどい時のためのヒント\n\n\n- ✅ 「簡易モード」（🎯⚙️🔁のみ）にする\n- ✅ 書ける項目だけでOK、残りは空欄でいい\n- ✅ 箇条書きでよい（長文でなくてよい）\n- ✅ 毎回全ては無理でも、週1でまとめて補完も可\n- ✅ 今日は「タイトルだけ」で終わってもええ日があってもいい\n\n---", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "1000_days_prompt_script.md::26::7bed50db5498cb17", "text": "## 🛠 オプション（今後拡張するなら）\n\n\n- Pythonスクリプトで日付・連番つきテンプレートファイルを生成\n- ChatGPT APIを使って毎日自動記録（ローカル or Obsidian）\n- 操作フェーズの出現頻度をCSVでまとめる\n- タグごとの頻度・共起を視覚化\n\n---\n\nこのドキュメントは「ChatGPTを毎日の創造の相棒にする」ための指針です。スレッドを変えても、これをそのまま冒頭に貼り付ければ継続できます。", "metadata": {"path": "1000_days_prompt_script.md", "file": "1000_days_prompt_script.md", "stem": "1000_days_prompt_script"}}
{"id": "book_concept.md::0::003457b423b8ed08", "text": "# 依頼内容\n\n「思想・実装・祈りの三層構造」でデジタル技術を捉え直し、  \n“日本におけるデジタル思想の再構成”を目指す書籍／記録文書を作成しています。\n\nこの文書は、次のような背景・悩み・体調・制約の中で進めている重要なプロジェクトです。\n\n---", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::1::e617cf0e9111191c", "text": "## 🎯 プロジェクトの目的\n\n\n- 日本の電子機器や技術文化が「思想ごと共有されていない」理由を掘り下げ、  \n　**思想 → 祈り（願い）→ 実装**という三層構造で問題と解法を記述したい\n- GUIやジェスチャー操作、サイバネティクス、身体拡張など、  \n　**“人と機械がどう繋がるべきか”を構造的に考える視点**を提供したい\n- 日本語でデジタル思想を語るための“翻訳言語”として「陰陽術」という枠組みを再定義したい\n- LLM（ChatGPT）を“外部の脳”として使い、  \n　**今の自分が持ちうる思考・思想を構造として記録・継承したい**\n\n---", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::2::b2e13aa728d1279c", "text": "## 💬 想定読者\n\n\n- 日本のデジタル産業に問題意識を持つ技術者／UX設計者\n- GUIや映像、プロジェクション、身体拡張などに関心のあるメディアアーティスト・研究者\n- 認知障害・脳機能の限界・思考力の低下に直面しながらも、技術でそれを補い記録を残したい人々\n- 日本語話者として、「思想」と「技術」と「実装」が断絶していることに悩んでいる人\n\n---", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::3::f7ee7a9cb7c8a60e", "text": "## 📐 形式・分量・進め方の方針\n\n\n- 全体は**書籍を想定**しているが、体力的制約から**短い論文形式の連載・分割公開も想定**\n- 各章は理想的には30ページ程度（12,000〜15,000字想定）\n- Day001〜008など、過去の実装記録を再活用しつつ、**それを思想と構造の中に位置づけ直す**\n- 執筆そのものが**自己の再構成・補助思考プロセス**でもある\n\n---", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::4::24756dc5700be7b1", "text": "## ⚠️ 制約と悩み（重要）\n\n\n- 🧠 **記憶が不安定で、以前考えていたことを忘れてしまうことがある**\n- 🕰 **集中力・思考体力が持続せず、長時間の執筆や一気の構造設計が困難**\n- 💭 **書きたいことはあるが、それが“誰にどう役立つのか”を整理するのに時間がかかる**\n- 🧪 **「陰陽術」として表現する必然性の“説明力”に不安がある**\n- 🤝 **他人に読んでもらえる構成に変換する際の“翻訳”に強い助けが必要**\n\n---", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::5::00cb760f0a3bb204", "text": "## 🙏 ChatGPTにお願いしたいこと", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::6::f4003a997a028992", "text": "### 🔹【必須の支援依頼】\n\n1. 各章（特に第一章）の構成支援と下書き生成  \n2. 「思想・祈り・実装の三層構造」の定義・意義・例示の整理  \n3. 「陰陽術」という言葉を使う理由の**説得力ある言語化（胡散臭さの排除）**  \n4. 読者にとっての価値が感じられる**導入文・前書き・要約文**の作成支援", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::7::398dcfb3b5b3563e", "text": "### 🔸【できればお願いしたい】\n\n5. Day001〜008の内容を再整理し、各章に挿入できるような「思想→実装の具体例」として使う  \n6. 書籍向け構成と、Zennやnoteなどの**短文連載用バージョン分割**の提案  \n7. 疲れたとき／迷ったときに、「問いかけ」や「構造整理の代行」をしてくれること\n\n---\n\n\n---", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::8::35439a0296a546d7", "text": "## 🧠 補足：シャノンと「継」\n\n\nクロード・シャノンが1937年に示したのは、命題の真偽を求める論理演算が、機械で物理的に表現できるということだった。\n\nANDやORといった論理演算は、それぞれリレー（継電器）の組み合わせによって実装できる。  \nリレーの接点が切り替わることで次の動作が起こる――  \nこの「動きの連鎖」は、状態を次に“継ぐ”構造である。\n\nこの視点から見ると、論理演算とは「継」の連なりであり、  \nシャノンの示したリレー回路は、論理思考そのものを“継”の構造として機械的に置き換える手段だったと言える。", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::9::d5dc7ece3ff53a53", "text": "## ✨ 書き出したい章\n\n\n> 第一章：思想・実装・祈りの三層構造について  \n> 内容：この三つの役割の定義、それがなぜ重要か、どのように接続されるべきか  \n> できれば、Day005（GUI操作と即時実行）を例として挿入したい\n\n> また、冒頭に「読者に向けた前書き」と「本書の構成と目的の説明」も同時に書きたい\n\n---", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::10::ea0ec400c97f327b", "text": "## 💡 補足情報\n\n\n- プロジェクターを「見るため」ではなく「人に“見せる”ための装置」と捉える思想がある  \n- サイバーとは「意図を外部に伝え、動かすこと」であり、**“祈りの実装”**として考えている  \n- デジタルは陰陽で構成される技術であり、日本語圏では“陰陽術”という表現が**思想と実装を接続するためのメタファー**として有効だと考えている（が、慎重な表現が必要）\n\n---", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "book_concept.md::11::94493ed388ee7b95", "text": "# 📝 次の出力希望\n\n- 「第一章の冒頭：思想・実装・祈りの三位一体とは何か」（導入＋定義＋例示で2000字前後）  \n- 「前書き：読者向けの導入と本書の構成・目的の説明」（1000〜1500字程度）", "metadata": {"path": "book_concept.md", "file": "book_concept.md", "stem": "book_concept"}}
{"id": "RAG_Bot_Project_Plan.md::0::10fc107434d855a4", "text": "# RAGボット構築計画（GitHub `days` リポジトリを活用）", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "RAG_Bot_Project_Plan.md::1::a3b3df4ee004fbf3", "text": "## 🎯 目的\n\nGitHubリポジトリ `days/` 配下のMarkdown（日々の記録）をRAG（Retrieval Augmented Generation）のデータベース化。\n過去の思想や知見を基に「今日のつぶやき」を自動生成し、X（Twitter）、Slack、Gmailに配信。\n配信は毎日3回（9時、13時、20時）、事前にSlackで承認・修正可能。\n\n---", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "RAG_Bot_Project_Plan.md::2::bb048474e8dcbcfb", "text": "## 💡 全体構成\n\n- **データソース**：GitHub `days/`（git pullで同期）\n- **前処理**：Markdown見出し単位で200〜500トークンのチャンク化＋メタデータ付与\n- **ベクトルDB**：Chroma（ローカル常駐、SQLiteベース）\n- **埋め込みモデル**：`intfloat/multilingual-e5-large`（日本語安定）\n- **再ランク**：`bge-reranker-v2-m3`（任意、CPUでも可）\n- **生成モデル**：ローカル（ollama / LM Studioの `Qwen2.5-7B/14B-Instruct`）＋失敗時APIフォールバック\n- **配信先**：X（FreeティアAPI）、Slack Bot、Gmail API\n- **スケジューラ**：APScheduler（JST 09:00 / 13:00 / 20:00）\n- **承認UI**：Slack DMのインタラクティブメッセージ（Approve / Edit / Skip）\n\n---", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "RAG_Bot_Project_Plan.md::3::e2ddc9a609111c71", "text": "## 🔄 データフロー\n\n1. **Git同期**：`git pull`でリポジトリ更新\n2. **チャンク化**：Markdownを見出しで分割、メタデータ（day/タイトル/タグ/日付）付与\n3. **インデックス**：Chromaに `(embedding, text, metadata)` 格納\n4. **RAG検索**：テーマに基づき関連チャンク取得（最近日の重み＋タグ一致）\n5. **下書き生成**：テンプレートに沿った「今日のつぶやき」生成（300〜600字、日本語、関西弁可）\n6. **承認フロー**：Slack DMでプレビュー送信 → Approve/Edit/Skip\n7. **配信**：X、Slackチャンネル、Gmail送信\n8. **ログ保存**：使用チャンクと最終投稿内容を保存\n\n---", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "RAG_Bot_Project_Plan.md::4::c6c5d6b213c358b6", "text": "## 🛠 技術スタック\n\n- **ベクトルDB**：Chroma\n- **埋め込み**：`multilingual-e5-large`\n- **Rerank**（任意）：`bge-reranker-v2-m3`\n- **生成モデル**：ollama / LM Studio（ローカルLLM）\n- **APIアダプタ**：\n  - X投稿：公式API（Freeティア）\n  - Slack送信＆承認UI：Block Kit\n  - Gmail送信：Gmail API（`messages.send`）\n- **スケジューラ**：APScheduler\n\n---", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "RAG_Bot_Project_Plan.md::5::05962d030d29ed05", "text": "## 📂 ディレクトリ構成案\n\n```\nrag-bot/\n  ingest/\n    fetch_repo.py          # git pull\n    split_markdown.py      # 見出しチャンク化\n    build_index.py         # 埋め込み→Chroma格納\n  rag/\n    retriever.py           # 検索処理\n    generator.py           # つぶやき生成\n    prompts/daily_ja.txt   # 「今日のつぶやき」テンプレ\n  adapters/\n    post_x.py              # X投稿\n    post_slack.py          # Slack送信・ボタンWebhook\n    send_gmail.py          # Gmail送信\n  serve/\n    app.py                 # FastAPI（Slack interactivity webhook等）\n    scheduler.py           # APScheduler（JST）\n  storage/\n    chroma/                # ベクトルDB\n    logs/\n  .env.example             # APIトークン類\n```\n\n---", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "RAG_Bot_Project_Plan.md::6::f3bd176d540c916d", "text": "## 📝 「今日のつぶやき」テンプレ例\n\n1. **今日の問い**（短く）\n2. **過去知見**（1〜2行、Day/セクション引用）\n3. **今日の一歩**（読者が真似できる具体）\n4. **ハッシュタグ**（2〜4個）\n\n例：\n> 環境はプロジェクトの“ミニ世界”。`pyenv+pipx+poetry` で“名づけ”と“パス”を整えると再現性が上がる。今日は `pyproject.toml` を最小で…\n\n---", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "RAG_Bot_Project_Plan.md::7::4feed47a82767660", "text": "## 📅 実装ステップ\n\n1. GitHubからローカルへの同期スクリプト作成\n2. Markdownチャンク化＋メタデータ付与\n3. Chromaインデックス作成\n4. RAG検索＋生成処理\n5. Slack承認フロー実装\n6. X/Slack/Gmailへの配信アダプタ作成\n7. スケジューリング設定（3回/日）\n8. テスト運用（手動承認→自動投稿へ移行）\n\n---", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "RAG_Bot_Project_Plan.md::8::dcf7462ad3104fc5", "text": "## 💰 コスト見積り\n\n- **X API**：Freeティア（0円、月500投稿以内）\n- **Slack Bot**：0円\n- **Gmail API**：0円\n- **モデル実行**：ローカルCPU/GPU（0円）\n- **ホスティング**：ローカルPC or 格安VPS（500〜1000円/月）\n\n---", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "RAG_Bot_Project_Plan.md::9::036812b763695838", "text": "## 使用PC\n\n- デバイス名\tDESKTOP G-GEAR\n- プロセッサ\t12th Gen Intel(R) Core(TM) i7-12700KF (3.60 GHz)\n- 実装 RAM\t32.0 GB\n- グラフィックボード NVIDIA GeForce RTX 3070\n- VRAM 8 GB", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "RAG_Bot_Project_Plan.md::10::22db010cffe9497f", "text": "## ✅ 次に決めること（次回チャット用）\n\n- X/Slack/GmailのAPIキー取得方法\n- 承認フローのSlackチャンネル/DMの仕様\n- 「今日のつぶやき」プロンプト詳細（関西弁モードの有無）\n- GitHub `days/` の更新頻度と同期方法（手動 or Webhook）", "metadata": {"path": "RAG_Bot_Project_Plan.md", "file": "RAG_Bot_Project_Plan.md", "stem": "RAG_Bot_Project_Plan"}}
{"id": "README.md::0::37c2eb49a8dbb9de", "text": "# 目指せ1000日記録プロジェクト：実装作業日記\n\n\nこのリポジトリは、自分の勉強ノートです。\n「操る」「可視化する」「つなげる」ことをテーマに、\n日々のプログラミングや考えたことを1000日かけて書き留めています。\n\n---\n\n📌 [記録用テンプレートはこちら](https://github.com/hiro-collab/book/blob/main/1000_days_prompt_script.md)", "metadata": {"path": "README.md", "file": "README.md", "stem": "README"}}
{"id": "README.md::1::c39ea6c695b8711b", "text": "## 📅 各日の記録\n\n\n- [Day001](https://github.com/hiro-collab/book/blob/main/days/Day001.md)\n- [Day002](https://github.com/hiro-collab/book/blob/main/days/Day002.md)\n- [Day003](https://github.com/hiro-collab/book/blob/main/days/Day003.md)\n- [Day004](https://github.com/hiro-collab/book/blob/main/days/Day004.md)\n- [Day005](https://github.com/hiro-collab/book/blob/main/days/Day005.md)\n- [Day006](https://github.com/hiro-collab/book/blob/main/days/Day006.md)\n- [Day007](https://github.com/hiro-collab/book/blob/main/days/Day007.md)\n- [Day008](https://github.com/hiro-collab/book/blob/main/days/Day008.md)\n- [Day009](https://github.com/hiro-collab/book/blob/main/days/Day009.md)\n- [Day010](https://github.com/hiro-collab/book/blob/main/days/Day010.md)\n- [Day011](https://github.com/hiro-collab/book/blob/main/days/Day011.md)\n- [Day012](https://github.com/hiro-collab/book/blob/main/days/Day012.md)\n- [Day013](https://github.com/hiro-collab/book/blob/main/days/Day013.md)\n- [Day014](https://github.com/hiro-collab/book/blob/main/days/Day014.md)\n- [Day015](https://github.com/hiro-collab/book/blob/main/days/Day015.md)\n- [Day016](https://github.com/hiro-collab/book/blob/main/days/Day016.md)\n- [Day017](https://github.com/hiro-collab/book/blob/main/days/Day017.md)\n- [Day018](https://github.com/hiro-collab/book/blob/main/days/Day018.md)\n- [Day019](https://github.com/hiro-collab/book/blob/main/days/Day019.md)\n- [Day020](https://github.com/hiro-collab/book/blob/main/days/Day020.md)\n- [Day021](https://github.com/hiro-collab/book/blob/main/days/Day021.md)\n- [Day022](https://github.com/hiro-collab/book/blob/main/days/Day022.md)\n- [Day023](https://github.com/hiro-collab/book/blob/main/days/Day023.md)\n- [Day024](https://github.com/hiro-collab/book/blob/main/days/Day024.md)\n\n---", "metadata": {"path": "README.md", "file": "README.md", "stem": "README"}}
{"id": "README.md::2::d37b523cd8085b3c", "text": "## 📖 思想・構想\n\n\n📖 [思想の核・構想はこちら（book_concept.md）](https://github.com/hiro-collab/book/blob/main/book_concept.md)\n📖 [bot化構想はこちら（RAG_Bot_Project_Plan.md）](https://github.com/hiro-collab/book/blob/main/RAG_Bot_Project_Plan.md)", "metadata": {"path": "README.md", "file": "README.md", "stem": "README"}}
